block content
  :marked
    Vertical alignment is just as easy. These mostly just hold values for the `align-items` property. They **do** mostly feature legacy browser backups when run in legacy mode though. These backups come in the form of `display: inline-block` and `vertical-align` combinations. So it's better to use these settings if you need legacy browser support (IE 8 & 9). The backups only take effect if a column count has been defined though.

  +demo({
    classes: {
html:`
- var heights = [100, 50, 75, 50, 75, 100];
figure
  figcaption Top align: #[code grid--vAlign-top]
  .grid.grid--cols-3.grid--vAlign-top.grid--wrap
    each height, i in heights
      .grid__cell(style=["height: ",height,"px;"].join(''), class=["-color-",i+1].join(''))
figure
  figcaption Bottom align: #[code grid--vAlign-bottom]
  .grid.grid--cols-3.grid--vAlign-bottom.grid--wrap
    each height, i in heights
      .grid__cell(style=["height: ",height,"px;"].join(''), class=["-color-",i+1].join(''))
figure
  figcaption Center align: #[code grid--vAlign-center]
  .grid.grid--cols-3.grid--vAlign-center.grid--wrap
    each height, i in heights
      .grid__cell(style=["height: ",height,"px;"].join(''), class=["-color-",i+1].join(''))
`,
},
    mixin: {
html:`
- var heights = [100, 50, 75, 50, 75, 100];

figure
  figcaption Top align: #[code $vAlign: top]
  .mixin-34
    each height, i in heights
      .mixin__cell(style=["height: ",height,"px;"].join(''), class=["-color-",i+1].join(''))
figure
  figcaption Bottom align: #[code $vAlign: bottom]
  .mixin-35
    each height, i in heights
      .mixin__cell(style=["height: ",height,"px;"].join(''), class=["-color-",i+1].join(''))
figure
  figcaption Center align: #[code $vAlign: center]
  .mixin-36
    each height, i in heights
      .mixin__cell(style=["height: ",height,"px;"].join(''), class=["-color-",i+1].join(''))
`,
scss: `
.mixin-34 {
  @include grid(3, $vAlign: top);
}
.mixin-35 {
  @include grid(3, $vAlign: bottom);
}
.mixin-36 {
  @include grid(3, $vAlign: center);
}
`
    }
}, {classes: '-noHeight'})
    :marked
      Vertical alignments


  +demo({
    classes: {
html:`
- var heights = [75, 50, 100, 50, 75, 100];

.grid__wrapper.add-shadow
  .grid.grid--hasInners.grid--gutter-20.grid--cols-3.grid--vAlign-center
    each height, i in heights
      .grid__cell(style=["height: ",height,"px;"].join(''))
        .grid__inner.add-border
`,
},
    mixin: {
html:`
- var heights = [75, 50, 100, 50, 75, 100];

.mixin__wrapper.add-shadow
  .mixin-37
    each height, i in heights
      .mixin__cell(style=["height: ",height,"px;"].join(''))
        .mixin__inner.add-border
`,
scss: `
.mixin-37 {
  @include grid(3, 20px, $vAlign: center, $inners: true);
}

.mixin__wrapper {
  overflow: hidden;
}
`
    }
}, {classes: '-noHeight'})
    :marked
      Using vertical alignment with `grid__inner` elements and a gutter

  +demo({
    classes: {
html:`
.grid__wrapper
  .grid.grid--cols-3.grid--gutter-20.grid--hasInners
    -
      var heights = [
        '<p>Videmusne ut pueri ne verberibus quidem a contemplandis rebus perquirendisque deterreantur? Itaque primos congressus copulationesque et consuetudinum instituendarum voluntates fieri propter voluptatem; Tum Triarius: Posthac quidem, inquit, audacius.</p> <p> Qui non moveatur et offensione turpitudinis et comprobatione honestatis? Quae sequuntur igitur? Iis igitur est difficilius satis facere, qui se Latina scripta dicunt contemnere. Sed tamen est aliquid, quod nobis non liceat, liceat illis. Sic, et quidem diligentius saepiusque ista loquemur inter nos agemusque communiter.</p>',

        '<p>At quicum ioca seria, ut dicitur, quicum arcana, quicum occulta omnia?</p>',

        '<p>Duo Reges: constructio interrete. Nam Pyrrho, Aristo, Erillus iam diu abiecti. Stulti autem malorum memoria torquentur, sapientes bona praeterita grata recordatione renovata delectant. A primo, ut opinor, animantium ortu petitur origo summi boni.</p>'
      ];
    each text in heights
      .grid__cell
        .grid__inner.grid.grid--vAlign-center.add-border
          .grid__cell.add-padding
            != text
`,
},
    mixin: {
html:`
.mixin__wrapper
  .mixin-38
    -
      var heights = [
        '<p>Videmusne ut pueri ne verberibus quidem a contemplandis rebus perquirendisque deterreantur? Itaque primos congressus copulationesque et consuetudinum instituendarum voluntates fieri propter voluptatem; Tum Triarius: Posthac quidem, inquit, audacius.</p> <p> Qui non moveatur et offensione turpitudinis et comprobatione honestatis? Quae sequuntur igitur? Iis igitur est difficilius satis facere, qui se Latina scripta dicunt contemnere. Sed tamen est aliquid, quod nobis non liceat, liceat illis. Sic, et quidem diligentius saepiusque ista loquemur inter nos agemusque communiter.</p>',

        '<p>At quicum ioca seria, ut dicitur, quicum arcana, quicum occulta omnia?</p>',

        '<p>Duo Reges: constructio interrete. Nam Pyrrho, Aristo, Erillus iam diu abiecti. Stulti autem malorum memoria torquentur, sapientes bona praeterita grata recordatione renovata delectant. A primo, ut opinor, animantium ortu petitur origo summi boni.</p>'
      ];
    each text in heights
      .mixin__cell
        .mixin-38B.mixin__inner.add-border
          .mixin__cell.add-padding
            != text
`,
scss: `
.mixin-38 {
  @include grid(3, 20px, $inners: true);
}

.mixin-38B {
  @include grid($vAlign: center);
}

.mixin__wrapper {
  overflow: hidden;
}
`
    }
}, {classes: '-noHeight'})
    :marked
      Using nested grids to vertically align text inside full sized grid cells

  +demo({
    classes: {
html:`
.grid.grid--wrap.grid--cols-3.grid--vAlign-bottom(style='height:100px;')
  - var heights = [80, 25, 50, 30, 40, 75];
  each height, i in heights
    .grid__cell(style=["height: ",height,"px;"].join(''), class=["-color-",i+1].join('') + (i === 2 ? ' grid__cell--vAlign-top' : ''))
`,
},
    mixin: {
html:`
.mixin-38C
  - var heights = [80, 25, 50, 30, 40, 75];
  each height, i in heights
    .mixin__cell(style=["height: ",height,"px;"].join(''), class=["-color-",i+1].join('') + (i === 2 ? ' mixin__oddOneOut' : ''))
`,
scss: `
.mixin-38C {
  @include grid(3, $vAlign: bottom);
}

.mixin__oddOneOut {
  align-self: flex-start;

  //IE 8/9 needs this if using legacy mode
  vertical-align: top !important;
}
`
    }
}, {classes: '-noHeight'})
    :marked
      Changing the vertical alignment of a single cell using `grid__cell--vAlign-xxx` classes (`xxx` being `top`, `bottom`, or `center`). If using the mixin, use the `align-self` css property and also `vertical-align: xxx !important` if running legacy mode.

  :marked
    ### Vertical flow

    Applying `grid--vertical` (`$vertical: true` in the mixin) is simply adding `flex-direction: column`. This flips the grid around so that grid cells progressively move down the page instead of across.

    Using the `vertical` setting features a backup for legacy browsers though whereas applying `flex-direction: column` on it's own does not.

  +demo({
    classes: {
html:`
.grid__wrapper
  .grid.grid--gutter-20.grid--vertical
    .grid__cell.-color-1
    .grid__cell.-color-2
    .grid__cell.-color-3
`
    },

    mixin: {
html:`
.mixin__wrapper
  .mixin-33
    .mixin__cell.-color-1
    .mixin__cell.-color-2
    .mixin__cell.-color-3
`,
scss:`
.mixin-33 {
  @include grid($gutter: 20px, $vertical: true);
}
`,
    }
})
    :marked
      Applying a vertical grid flow.
