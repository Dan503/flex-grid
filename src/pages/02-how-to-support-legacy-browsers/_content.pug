block content
  :marked
    ### Supporting browsers that support flexbox but not the latest syntax (IE10)

    IE10 has support for flexbox however you will need to incorporate [Autoprefixer](https://github.com/postcss/autoprefixer) into your build process to support it's outdated flexbox syntax.

    Also be aware of this [IE10 flexbox bug](http://stackoverflow.com/questions/16808815/ie10-flexbox-p-element-non-wrapping/33795089) which can cause problems in page layouts.

    ### Supporting browsers that do not support flexbox (IE8 & 9)

    Gutter Grid is powered mostly by flexbox. To help cater to browsers that do not support it, Gutter Grid has `display:table` and `float:left` backups built into it for when `flexbox` is not supported. In general it will use `display:table` since tables act in a very similar way to how flexbox acts. However, when wrapping is involved and the browser does not support the `flex-wrap` css property, it will use `float:left` styling instead.

    In order to detect if the browser supports flexbox and flex-wrap, Gutter Grid is dependent on [Modernizr](https://modernizr.com/) being a part of your build process. The particular Modernizr properties it is dependent on is `flexwrap` and `flexbox`. To add Modernizr to your site, either [download a custom build that includes flexbox and flexwrap](https://modernizr.com/download?setclasses&q=flex) from the modernizr website and link to it in the HTML of your website, or you can incorporate [Customizr](https://www.npmjs.com/package/customizr) into your website compilation process. I recommend taking the second option.

    If taking the [Customizr](https://www.npmjs.com/package/customizr) route, you will need to force it to include `flexwrap` and `flexbox` tests since it won't look through the `node_modules` folder for Modernizr references (and for good reason!). You will also need to ensure that it is adding classes to the page. You can do this when defining the Customizr configuration settings like this:

    ```````js
    //Minimum customizr settings required for Gutter Grid to work
    {
      options: [
        'setClasses',
      ],
      tests: [
        'flexbox',
        'flexwrap'
      ]
    }
    ```````

    Please note that although there are fallbacks in place, they aren't able to perfectly repliate the behaviour of a browser that has full flexbox support. **The design in IE8 & 9 won't look like the design on browsers that support flexbox**.

    The fallbacks are mainly just there to help stop the layout from completly breaking on you when compared to using purely flexbox on it's own. You will likely need to do some extra custom styles but the fallbacks will most likely get you to about 80% or more of the way there.

    ### Supporting IE8 specifically

    In order to better support IE8, the HTML for your HTML element will need to look something like this:

    ```````html
    <!--[if lte IE 8]><html class="lt-ie9" lang="en"><![endif]-->
    <!--[if gt IE 8]><!--><html lang="en"><!--<![endif]-->

    ...

    </html>
    ```````

    The `$grid-gutter-ie-fallback` setting should be set to the main background color of your website. IE8 doesn't support the css `background-clip` property which is a key part of how the gutters are able to retain transparency. This variable defines a color that the gutters will be displayed in by default in IE8.

    ````scss
    //Set what color gutters will be in IE8
    $grid-gutter-ie-fallback: #fff;

    @import '../node_modules/mq-scss/mq';
    @import '../node_modules/gutter-grid/grid-mixin';
    @import '../node_modules/gutter-grid/grid-classes';
    ````
