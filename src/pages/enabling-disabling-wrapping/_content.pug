block content
	:marked
		## Enable and disable wrapping

		Wrapping isn't enabled by default on desktop sized screens mostly for the sake of legacy browser compatibility. To enable wrapping on desktop, a `grid--wrap` class needs to be added. Without the class, if there are too many grid cells for the number of columns, it will squeeze them together instead of wrapping them.

	+demo({
html:`
.grid.grid--cols-3
	.grid__cell.-color-1
	.grid__cell.-color-2
	.grid__cell.-color-3
	.grid__cell.-color-4
	.grid__cell.-color-5
	.grid__cell.-color-6
`})
		:marked
			6 cells in a 3 column grid with grid--wrap **not enabled**

	+demo({
html:`
.grid.grid--cols-3.grid--wrap
	.grid__cell.-color-1
	.grid__cell.-color-2
	.grid__cell.-color-3
	.grid__cell.-color-4
	.grid__cell.-color-5
	.grid__cell.-color-6
`})
		:marked
			6 cells in a 3 column grid with grid--wrap **enabled**

	:marked
		When the browser reaches a certain screen size, wrapping becomes enabled by default so that the content in the grid is able to adapt to the smaller screen sizes. The setting that determines at what point `grid--wrap` enables itself is `$grid-page-width`. It is named "page-width" since it is meant to be the screen width at which the edge of the desktop design meets the edge of the screen.

	+demo({
scss:`
//This is the default setting
$grid-page-width: 1200px;

@import '../node_modules/mq-scss/mq';
@import '../node_modules/gutter-grid/grid-classes';`
})
		:marked
			Alter the screen size that grid wrapping becomes enabled by default at

	:marked
		To just outright disable grid wrapping for all screen sizes, use the `grid--noWrap` class.

	+demo({
html:`
.grid.grid--cols-6.grid--noWrap
	.grid__cell.-color-1
	.grid__cell.-color-2
	.grid__cell.-color-3
	.grid__cell.-color-4
	.grid__cell.-color-5
	.grid__cell.-color-6
`})
		:marked
			Disable grid wrapping at all screen sizes (resize browser window to see the effect)
