block content
  :marked
    ### Version 4.0.0

    #### Breaking changes:

    Note: these breaking changes mostly apply only when the `$grid-legacy-support` is set to `false` (the default setting).

    CSS Grid is going to kill off almost all possible need for Gutter Grid soon. IE 11 is essentially the only reason Gutter Grid is still useful right now.
    With IE 8 and 9 essentially dead, it doesn't make sense to hamper the experience of IE11 developers for the sake of these dead browsers.
    I'm optimising the code to make the experience as enjoyable as possible for IE11 devs. Unfortunately it means the defaults will be different depending on if the legacy setting is turned on or not.
    If the legacy setting is turned on then Gutter Grid will behave in mostly the same way it did in version 3.0.0.

      - New default settings
        - For the mixin `$align` now defaults to `left` and `$wrap` defaults to `true` but only if columns have been defined.
        - If using the classes system, in order to make the grid stretch like it did in v3.0.0 a `grid--stretch` class needs to be added to the `.grid` element. This is only necessary if columns have been defined.
      - The `grid--noGrowth` class has been renamed `grid--noStretch` to align with the new `grid--stretch` class. (a breaking change for **everyone**)
      - The `$grow` setting in the mixin has been renamed to `$stretch`. (a breaking change for **everyone**)
      - `$breakpoints` parameter in the mixin has been moved to the 3rd slot. (a breaking change for **everyone**)

    ### Version 3.0.0

      - Gutter Grid will now install whatever version of mq-scss is available (defaulting to the latest version)
      - **Breaking change:** You now need to set the `$grid-legacy-support` setting to `true` if you wish to support browsers that do not support flexbox natively. (Change made to drastically reduce the amount of bloat found in the output css).

    ### Version 2.0.0

    #### What's new?

      - Gutter Grid now comes in mixin flavour!
      - Gutters can now have different vertical vs horizontal gutter widths
      - Column media queries can now take [mq-scss](https://www.npmjs.com/package/mq-scss) syntax for defining completely custom breakpoints
      - Improved legacy browser support
      - Reduced specificity on class based selectors for easier overriding of styles

    #### Breaking changes

    ##### Reduced specificity in class names

    If upgrading, none of the class names have changed, however the reduced specificity will mean that you may need to update your styles to not conflict with the new grid system.

    ##### New format for assigning column break points

    The new format to the column break points is a bit different to the original. before it was a list of screen-sizes then column widths with a space in between each one.

    Version 1.x

    `````
    (
      600px 100%
    )
    `````

    Column width is now stated first, and screen width is stated second. By default, the screen width will be calculated as a `max-width` media query. However, you can now provide [mq-scss](https://www.npmjs.com/package/mq-scss) syntax as an alternative to stating a screen width pixel value. This means that you can define the column break points using just about any media query you like. Taking a mobile first `min-width` approach will break legacy browser support though unless you have [UnMQ](https://github.com/jonathantneal/postcss-unmq) integrated into your build process.

    Version 2.x

    `````
    (
      100% : 600px, //state a max-width pixel value
      //or
      100% : (max, 600px), //provide a custom mq-scss media query
    )
    `````

    ##### New format for assigning gutter break-points

    The new way of assigning breakpoints to gutters isn't much different to the original method. The only incompatible difference being that now you need to write `mq` with a space after it before the list of values (the space is vital).

    Version 1.x

    `````scss
    $grid-cell-gutters: (
        'mediaQueryGutter' : (
            50px,
            30px (max, 800px),
            10px (max, 700px)
        )
    );
    `````

    Version 2.x

    `````scss
    $grid-cell-gutters: (
        'mediaQueryGutter' : mq (
            50px,
            30px (max, 800px),
            10px (max, 700px)
        )
    );
    `````
