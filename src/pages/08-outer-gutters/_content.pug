block content
  :marked
    By default, Gutter Grid will place the grid cells on the very edge of the content area as shown in this example by a red bounding box:

  +demo({
    classes: {
html:`
.grid__wrapper
  .grid.grid--gutter-20.grid--cols-3
    .grid__cell.-color-1
    .grid__cell.-color-2
    .grid__cell.-color-3
    .grid__cell.-color-4
    .grid__cell.-color-5
    .grid__cell.-color-6
`,
scss:`
//Define gutter sizes like this
$grid-cell-gutters: (
  20 : 20px,
);

@import '../node_modules/mq-scss/mq';
@import '../node_modules/gutter-grid/grid-classes';`
    },

    mixin: {
html:`
.mixin__wrapper
  .mixin-12
    .mixin__cell.-color-1
    .mixin__cell.-color-2
    .mixin__cell.-color-3
    .mixin__cell.-color-4
    .mixin__cell.-color-5
    .mixin__cell.-color-6
`,
scss:`
.mixin-12 {
  @include grid(3, 20px);
}

.mixin__wrapper {
  overflow: hidden;
}
`,
    }
})

  :marked
    This isn't always the desired layout though. Sometimes you want the gutters to also apply around the edges of the grid as well. This is when the `outerGutters` setting comes in.

  +demo({
    classes: {
html:`
.grid__wrapper
  .grid.grid--outerGutters.grid--gutter-20.grid--cols-3
    .grid__cell.-color-1
    .grid__cell.-color-2
    .grid__cell.-color-3
    .grid__cell.-color-4
    .grid__cell.-color-5
    .grid__cell.-color-6
`,
scss:`
//Define gutter sizes like this
$grid-cell-gutters: (
  20 : 20px,
);

@import '../node_modules/mq-scss/mq';
@import '../node_modules/gutter-grid/grid-classes';`
    },

    mixin: {
html:`
.mixin__wrapper
  .mixin-14
    .mixin__cell.-color-1
    .mixin__cell.-color-2
    .mixin__cell.-color-3
    .mixin__cell.-color-4
    .mixin__cell.-color-5
    .mixin__cell.-color-6
`,
scss:`
.mixin-14 {
  @include grid(3, 20px, $outerGutters: true);
}

.mixin__wrapper {
  overflow: hidden;
}
`,
    }
})
    :marked
      Using the `outerGutters` setting to apply the gutter to the edges of the grid

  :marked
    The setting also comes in horizontal only, and vertical only variants. For the class system, that comes in the form of these classes: `grid--outerGutters-h` for horizontal only and `grid--outerGutters-v` for vertical only. For the mixin version, set `$outerGutters: h` for horizontal or `$outerGutters: v` for vertical. The setting also comes in top, left, bottom, and right variant's as you will see in the examples below.

  +demo({
    classes: {
html:`
figure
  figcaption Horizontal outer gutter: #[code grid--outerGutters-h]
  .grid__wrapper
    .grid.grid--outerGutters-h.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6

figure
  figcaption Vertical outer gutter: #[code grid--outerGutters-v]
  .grid__wrapper
    .grid.grid--outerGutters-v.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6
`,
scss:`
//Define gutter sizes like this
$grid-cell-gutters: (
  20 : 20px,
);

@import '../node_modules/mq-scss/mq';
@import '../node_modules/gutter-grid/grid-classes';`
    },

    mixin: {
html:`
figure
  figcaption Horizontal outer gutter: #[code $outerGutters: h]
  .mixin__wrapper
    .mixin-15
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6

figure
  figcaption Vertical outer gutter: #[code $outerGutters: v]
  .mixin__wrapper
    .mixin-16
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6
`,
scss:`
.mixin-15 {
  @include grid(3, 20px, $outerGutters: h);
}

.mixin-16 {
  @include grid(3, 20px, $outerGutters: v);
}

.mixin__wrapper {
  overflow: hidden;
}
`,
    }
})
    :marked
      Horizontal and vertical only variants

  +demo({
    classes: {
html:`
figure
  figcaption Top outer gutter: #[code grid--outerGutters-top]
  .grid__wrapper
    .grid.grid--outerGutters-top.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6

figure
  figcaption Bottom outer gutter: #[code grid--outerGutters-bottom]
  .grid__wrapper
    .grid.grid--outerGutters-bottom.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6

figure
  figcaption Left outer gutter: #[code grid--outerGutters-left]
  .grid__wrapper
    .grid.grid--outerGutters-left.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6

figure
  figcaption Right outer gutter: #[code grid--outerGutters-right]
  .grid__wrapper
    .grid.grid--outerGutters-right.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6

`,
scss:`
//Define gutter sizes like this
$grid-cell-gutters: (
  20 : 20px,
);

@import '../node_modules/mq-scss/mq';
@import '../node_modules/gutter-grid/grid-classes';`
    },

    mixin: {
html:`
figure
  figcaption Top outer gutter: #[code $outerGutters: top]
  .mixin__wrapper
    .mixin-17
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6

figure
  figcaption Bottom outer gutter: #[code $outerGutters: bottom]
  .mixin__wrapper
    .mixin-18
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6

figure
  figcaption Left outer gutter: #[code $outerGutters: left]
  .mixin__wrapper
    .mixin-19
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6

figure
  figcaption Right outer gutter: #[code $outerGutters: right]
  .mixin__wrapper
    .mixin-20
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6

`,
scss:`
.mixin-17 {
  @include grid(3, 20px, $outerGutters: top);
}

.mixin-18 {
  @include grid(3, 20px, $outerGutters: bottom);
}

.mixin-19 {
  @include grid(3, 20px, $outerGutters: left);
}

.mixin-20 {
  @include grid(3, 20px, $outerGutters: right);
}

.mixin__wrapper {
  overflow: hidden;
}
`,
    }
})
    :marked
      Top, bottom, left and right only variants

  :marked
    Also, there is a delayed variant for the horizontal classes. This is primarily for use with overarching page layouts. The idea with the delayed variant is that when the screen reaches the point where the edge of the screen would meet the edge of the grid (plus the gutter), horizontal outer gutters are applied to prevent the edges of the grid from touching the edges of the screen. The `$grid-page-width` global setting determines when the change occurs. Define this before the import statements to change it.

  +demo({
    classes: {
html:`
figure
  figcaption Horizontal outer gutter both sides delayed: #[code grid--outerGutters-h-delayed]
  .grid__wrapper
    .grid.grid--outerGutters-h-delayed.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6

figure
  figcaption Left outer gutter delayed: #[code grid--outerGutters-left-delayed]
  .grid__wrapper
    .grid.grid--outerGutters-left-delayed.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6

figure
  figcaption Right outer gutter delayed: #[code grid--outerGutters-right-delayed]
  .grid__wrapper
    .grid.grid--outerGutters-right-delayed.grid--gutter-20.grid--cols-3
      .grid__cell.-color-1
      .grid__cell.-color-2
      .grid__cell.-color-3
      .grid__cell.-color-4
      .grid__cell.-color-5
      .grid__cell.-color-6
`,
scss:`
//Define gutter sizes like this
$grid-cell-gutters: (
  20 : 20px,
);

//Edit the screen size at which point the switch happens
$grid-page-width: 1200px;

@import '../node_modules/mq-scss/mq';
@import '../node_modules/gutter-grid/grid-classes';`
    },

    mixin: {
html:`
figure
  figcaption Horizontal outer gutter, both sides delayed: #[code $outerGutters: h-delayed]
  .mixin__wrapper
    .mixin-21
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6

figure
  figcaption Left outer gutter delayed: #[code $outerGutters: left-delayed]
  .mixin__wrapper
    .mixin-22
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6

figure
  figcaption Right outer gutter delayed: #[code $outerGutters: right-delayed]
  .mixin__wrapper
    .mixin-23
      .mixin__cell.-color-1
      .mixin__cell.-color-2
      .mixin__cell.-color-3
      .mixin__cell.-color-4
      .mixin__cell.-color-5
      .mixin__cell.-color-6
`,
scss:`
.mixin-21 {
  @include grid(3, 20px, $outerGutters: h-delayed);
}

.mixin-22 {
  @include grid(3, 20px, $outerGutters: left-delayed);
}

.mixin-23 {
  @include grid(3, 20px, $outerGutters: right-delayed);
}

.mixin__wrapper {
  overflow: hidden;
}
`,
    }
})
    :marked
      Delayed horizontal, left and right gutter variants (resize browser to see it take effect). There are no vertical variants. I have purposely made the design of the site less than 1200px to clearly demonstrate this delay effect.
