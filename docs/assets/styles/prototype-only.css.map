{"version":3,"sources":["../../grid-classes.scss","../../grid-shared-mixins.scss","../../node_modules/mq-scss/_mq.scss","prototype-only.css","../_0_styles/00-config-files/npm-installs.scss","_1_modules/templateList/templateList.scss","../_0_styles/00-config-files/01-colors/1-brand.scss"],"names":[],"mappings":"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","file":"prototype-only.css","sourcesContent":["\r\n//================================================*\\\r\n//*\tGRID STYLING FILE\t\t\t\t\t\t*/\r\n//----------------------------------------------------\r\n//\tThis file holds the code that generates the\r\n//\tclasses for the grid system.\r\n//\r\n//\tDO NOT EDIT THIS FILE UNLESS YOU REALLY KNOW\r\n//\tWHAT YOU'RE DOING!\r\n//================================================*/\r\n\r\n//Default settings\r\n@import 'grid-settings';\r\n\r\n@import 'grid-shared-mixins';\r\n\r\n$fullPrefix: if($grid-prefix != '', $grid-prefix+'-', '');\r\n\r\n//================================================*\\\r\n//*\t\t\t\tGRID WIDTHS\t\t\t\t\t\t*/\r\n//----------------------------------------------------\r\n//\tQuickly and easily apply standard percentage\r\n//\twidths to grid cells based on fractions.\r\n//\r\n//\tstep 1: give container the width modifier class.\r\n//\t\t\teg: grid--thirds\r\n//\tstep 2: give extra wide grid span classes\r\n//\t\t\teg. grid__cell--span2\r\n//\tWARNING: using a span class will likely require additional\r\n//\t\t\t styling for tablets and smaller devices\r\n//\r\n//\tEXAMPLE HTML:\r\n//\t<ul class=\"grid grid--cols-3\">\r\n//\t\t<li class=\"grid__cell\">Column is 1/3 wide on desktop</li>\r\n//\t\t<li class=\"grid__cell grid__cell--span-2\">column is 2/3 wide on desktop</li>\r\n//\t</ul>\r\n//================================================*/\r\n\r\n@for $i from 1 through length($grid-bp-list) {\r\n\t$columnWidth: column-width($i);\r\n\t$breaks: map-get($grid-bp-list, $i);\r\n\r\n\t//sets the default grid__cell widths\r\n\t.#{$fullPrefix}grid--cols-#{$i} {\r\n\t\t> * {\r\n\t\t\twidth: $columnWidth;\r\n\t\t}\r\n\r\n\t\t//.grid__cell--span-# styling\r\n\t\t@if ($i > 1){\r\n\t\t\t@for $x from 2 through $i {\r\n\t\t\t\t> .#{$fullPrefix}grid__cell--span-#{$x} {\r\n\t\t\t\t\t@if ($grid-calc-support) {\r\n\t\t\t\t\t\twidth: calc(#{$x} / #{$i} * 100%);\r\n\t\t\t\t\t} @else {\r\n\t\t\t\t\t\twidth: $x / $i * 100%;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Applies the media queries for the break points\r\n\t\t&:not(.#{$fullPrefix}grid--noMQs) {\r\n\t\t\t> *:not([class*=\"cell--span-\"]) {\r\n\t\t\t\t@include generate-column-breakpoints($breaks);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//base grid styling\r\n.#{$fullPrefix}grid {\r\n\t$grid: &;\r\n\r\n\tbox-sizing: border-box;\r\n\tlist-style: none;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tmin-width: 100%;\r\n\tborder: 0 solid transparent;\r\n\tdisplay: flex;\r\n\talign-content: stretch;\r\n\r\n\t@if (not $grid-legacy-support){\r\n\t\t//By default grids will not wrap unless there is a column setting\r\n\t\t&[class*=\"grid--cols\"]:not(#{$grid}--noWrap){\r\n\t\t\tflex-wrap: wrap;\r\n\t\t}\r\n\t}\r\n\r\n\t//grid__wrapper styling... really only necessary for use with grid--gutter-#\r\n\t&__wrapper {\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t//For when overflow needs to be visible\r\n\t&__paddedWrapper {\r\n\t\tpadding-bottom: 1px;\r\n\t}\r\n\r\n\t//base grid__cell styling\r\n\t&__cell {\r\n\t\tbox-sizing: border-box;\r\n\t\tmin-width: 0%;\r\n\t\tmax-width: 100%;\r\n\t\tdisplay: block;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t\tbackground-clip: padding-box!important;\r\n\t\tborder: 0 solid transparent;\r\n\r\n\t\t@if ($grid-legacy-support){\r\n\t\t\tflex-grow: 1;\r\n\t\t} @else {\r\n\t\t\t//If no columns set and no alignment properties set, grid cells will stretch\r\n\t\t\t#{$grid}:not([class*=\"grid--cols\"]):not(#{$grid}--noStretch):not([class*=\"grid--align-\"]):not([class*=\"grid--space-\"]):not(#{$grid}--noResize)\r\n\t\t\t> &:not(#{$grid}__cell--noStretch):not(#{$grid}__cell--noResize) {\r\n\t\t\t\tflex-grow: 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&[class*=\"cell--span-\"] {\r\n\t\t\tflex-grow: 1;\r\n\t\t}\r\n\r\n\t\t//cell vertical alignment\r\n\t\t&--vAlign {\r\n\t\t\t&-center {\r\n\t\t\t\talign-self: center;\r\n\t\t\t}\r\n\t\t\t&-top {\r\n\t\t\t\talign-self: flex-start;\r\n\t\t\t}\r\n\t\t\t&-bottom {\r\n\t\t\t\talign-self: flex-end;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&.#{$fullPrefix}grid { display: flex; }\r\n\t\t&, * > {\r\n\t\t\t//helps fix IE10 word-wrap bug (elements need to not be display:inline for the fix to work though)\r\n\t\t\tmax-width: 100%;\r\n\t\t\tflex-shrink: 1;\r\n\t\t}\r\n\r\n\t\t&--stretch {\r\n\t\t\tflex-grow: 1;\r\n\t\t}\r\n\t\t&--noStretch {\r\n\t\t\tflex-grow: 0;\r\n\t\t}\r\n\t\t&--noShrink {\r\n\t\t\tflex-shrink: 0;\r\n\t\t}\r\n\t\t&--noResize {\r\n\t\t\tflex-shrink: 0;\r\n\t\t\tflex-grow: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t//base grid__inner styling\r\n\t&__inner {\r\n\t\tdisplay: block;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t@each $class, $gutter in $grid-cell-gutters {\r\n\t\t&--gutter-#{$class} {\r\n\t\t\t@include parse-gutter-data($gutter, 'classes');\r\n\t\t}\r\n\t}\r\n\r\n\t//grid--outerGutters-# styling\r\n\t&--outerGutters {\r\n\t\tmargin: 0;\r\n\t\t&-v {\r\n\t\t\tmargin-top: 0;\r\n\t\t\tmargin-bottom: 0;\r\n\t\t}\r\n\t\t&-h {\r\n\t\t\tmargin-left: 0;\r\n\t\t\tmargin-right: 0;\r\n\t\t}\r\n\t\t&-top {\r\n\t\t\tmargin-top: 0;\r\n\t\t}\r\n\t\t&-bottom {\r\n\t\t\tmargin-bottom: 0;\r\n\t\t}\r\n\t\t&-left {\r\n\t\t\tmargin-left: 0;\r\n\t\t}\r\n\t\t&-right {\r\n\t\t\tmargin-right: 0;\r\n\t\t}\r\n\r\n\t\t@if ($grid-legacy-support) {\r\n\t\t\t.lt-ie9 & {\r\n\t\t\t\t> *, & {\r\n\t\t\t\t\tborder-color: $grid-gutter-ie-fallback;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//hasInners makes grid__inner elements take up the full height of the grid cell\r\n\t&--hasInners {\r\n\t\t//grid__cell\r\n\t\t> * {\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: stretch;\r\n\r\n\t\t\t//grid__inner\r\n\t\t\t> * {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\r\n\t\t\t\t&.#{$fullPrefix}grid {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t&--vAlign {\r\n\t\t&-center {\r\n\t\t\talign-items: center;\r\n\t\t}\r\n\t\t&-top {\r\n\t\t\talign-items: flex-start;\r\n\t\t}\r\n\t\t&-bottom {\r\n\t\t\talign-items: flex-end;\r\n\t\t}\r\n\t}\r\n\r\n\t&--vertical {\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\t&--stretch {\r\n\t\t> * {\r\n\t\t\tflex-grow: 1;\r\n\t\t}\r\n\t}\r\n\t&--noStretch {\r\n\t\t> * {\r\n\t\t\tflex-grow: 0;\r\n\t\t}\r\n\t}\r\n\t&--noShrink {\r\n\t\t> * { flex-shrink: 0; }\r\n\t}\r\n\t&--noResize {\r\n\t\t> * {\r\n\t\t\tflex-shrink: 0;\r\n\t\t\tflex-grow: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t//allows a grid to be set at something other than 100% of it's parents width\r\n\t&--mini {\r\n\t\tmin-width: 0;\r\n\t}\r\n\r\n\t//allows columns to wrap after screen hits the edge of the design\r\n\t@include mq(max, $grid-page-width){\r\n\t\tflex-wrap: wrap;\r\n\t}\r\n\r\n\t//Unfortunately this is a necessity for IE compatibility\r\n\t//allows wrapping at all screen widths\r\n\t&--wrap {\r\n\t\tflex-wrap: wrap;\r\n\t\t@include ieFloat;\r\n\t}\r\n\t//disables wrapping at all screen widths\r\n\t&--noWrap {\r\n\t\tflex-wrap: nowrap;\r\n\t}\r\n\r\n\t//quick access to space-between and space-around\r\n\t&--space {\r\n\t\t&-between, &-around {\r\n\t\t\t> * { flex-grow: 0; }\r\n\t\t}\r\n\t\t&-between {\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\t\t&-around {\r\n\t\t\tjustify-content: space-around;\r\n\t\t}\r\n\t}\r\n\r\n\t//quick access to left,center and right alignments\r\n\t&--align {\r\n\t\t&-left, &-center, &-right {\r\n\t\t\t> * { flex-grow: 0; }\r\n\t\t}\r\n\t\t&-left {\r\n\t\t\tjustify-content: flex-start;\r\n\t\t}\r\n\t\t&-center {\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t\t&-right {\r\n\t\t\tjustify-content: flex-end;\r\n\t\t}\r\n\t}\r\n\r\n\t//tabular/float:left backup for IE9 and below\r\n\t@if ($grid-legacy-support) {\r\n\t\t.no-flexbox &, .no-flexwrap & {\r\n\t\t\tdisplay: table;\r\n\t\t\twidth: auto;\r\n\t\t\t> * { display: table-cell; vertical-align: top; }\r\n\r\n\t\t\t&--wrap, &[class*=\"grid--cols\"][class*=\"grid--gutter\"] {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\t> * {\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\tfloat: left;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&:after {\r\n\t\t\t\t\tcontent: '';\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\tclear: both;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&--vAlign {\r\n\t\t\t\t&-top {\r\n\t\t\t\t\t> * { vertical-align: top; }\r\n\t\t\t\t}\r\n\t\t\t\t&-center {\r\n\t\t\t\t\t> * { vertical-align: middle; }\r\n\t\t\t\t}\r\n\t\t\t\t&-bottom {\r\n\t\t\t\t\t> * { vertical-align: bottom; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&--align {\r\n\t\t\t\t// need to overide the attribute selector\r\n\t\t\t\t&-left.grid--align-left.grid--align-left,\r\n\t\t\t\t&-center.grid--align-center.grid--align-center,\r\n\t\t\t\t&-right.grid--align-right.grid--align-right {\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t> * {\r\n\t\t\t\t\t\tdisplay: inline-block;\r\n\t\t\t\t\t\tfloat: none;\r\n\t\t\t\t\t\tmargin-right: -4px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t&-left {\r\n\t\t\t\t\ttext-align: left;\r\n\t\t\t\t}\r\n\t\t\t\t&-center {\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t}\r\n\t\t\t\t&-right {\r\n\t\t\t\t\ttext-align: right;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&--space {\r\n\t\t\t\t&-between, &-around {\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\t> * {\r\n\t\t\t\t\t\tdisplay: inline-block;\r\n\t\t\t\t\t\tfloat: none;\r\n\t\t\t\t\t\tmargin-right: -4px!important;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&--vertical {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\t&:after {\r\n\t\t\t\t\tcontent: '';\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\tclear: both;\r\n\t\t\t\t}\r\n\t\t\t\t& > * {\r\n\t\t\t\t\tfloat: left;\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//allows IE to use floats instead of display table without affecting modern browsers\r\n\t&--ieFloat, &--noGrowth, &--noResize {\r\n\t\t@include ieFloat;\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n","@function fill-blank-columns($bp-list){\r\n\t$i: 0;\r\n\t@while ($i < length($bp-list)) {\r\n\t\t@if (not map-has-key($bp-list, $i) and $i > 0) {\r\n\t\t\t$bp-list: map-merge($bp-list, ($i: false));\r\n\t\t}\r\n\t\t$i: $i + 1;\r\n\t}\r\n\t@return $bp-list;\r\n}\r\n$grid-bp-list: fill-blank-columns($grid-bp-list);\r\n\r\n@function is-percentage($value) {\r\n  @return is-number($value) and unit($value) == '%';\r\n}\r\n\r\n@function column-width($col-count){\r\n\t@return if($grid-calc-support, calc(100% / #{$col-count}), percentage(1/$col-count));\r\n}\r\n\r\n//switches IE (and other non-flexbox friendly browsers) to using float mode\r\n@mixin ieFloat {\r\n\t@if ($grid-legacy-support) {\r\n\t\t.no-flexbox &, .no-flexwrap & {\r\n\t\t\tdisplay: block;\r\n\t\t\t&:after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tclear: both;\r\n\t\t\t}\r\n\t\t\t& > * {\r\n\t\t\t\tfloat: left;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@mixin generate-column-breakpoints ($breaks){\r\n\t@if ($breaks != false) {\r\n\t\t@each $V-columnWidth, $BP-deviceWidth in $breaks {\r\n\t\t\t$col-width: $V-columnWidth;\r\n\t\t\t@if (not is-percentage($V-columnWidth)){\r\n\t\t\t\t$col-width: column-width($V-columnWidth);\r\n\t\t\t}\r\n\t\t\t//media query defaults to max-width if only a pixel value is given\r\n\t\t\t$mq: if(length($BP-deviceWidth) > 1, $BP-deviceWidth, (max, $BP-deviceWidth));\r\n\t\t\t@include mq($mq){\r\n\t\t\t\twidth: $col-width;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//Generates the grid cell gutters\r\n@mixin generate-gutters ($format, $gutter, $outerGutters: false){\r\n\r\n\t$gutterCount: length($gutter);\r\n\r\n\t$g1: 1;\r\n\t$g2: if($gutterCount > 1, 2, 1);\r\n\r\n\t$gutterSet: map-get((\r\n\t\t1: (\r\n\t\t\ttop: $gutter,\r\n\t\t\tright: $gutter,\r\n\t\t\tbottom: $gutter,\r\n\t\t\tleft: $gutter,\r\n\t\t),\r\n\t\t2: (\r\n\t\t\ttop: nth($gutter, $g1),\r\n\t\t\tright: nth($gutter, $g2),\r\n\t\t\tbottom: nth($gutter, $g1),\r\n\t\t\tleft: nth($gutter, $g2),\r\n\t\t),\r\n\t), $gutterCount);\r\n\r\n\t$gutter-top: map-get($gutterSet, top);\r\n\t$gutter-right: map-get($gutterSet, right);\r\n\t$gutter-bottom: map-get($gutterSet, bottom);\r\n\t$gutter-left: map-get($gutterSet, left);\r\n\r\n\t$margin: map-get((\r\n\t\t1: -$gutter-top,\r\n\t\t2: (-$gutter-top) (-$gutter-right),\r\n\t), $gutterCount);\r\n\r\n\t@if ($format == 'mixin' and ($outerGutters == 'v' or $outerGutters == 'top' or $outerGutters == true)) {\r\n\t\tmargin: $margin;\r\n\t\tborder-width: $gutter-top $gutter-right 0 0;\r\n\t} @else {\r\n\t\tmargin: 0 (-$gutter-right) (-$gutter-bottom) (-$gutter-left);\r\n\t\tborder-width: 0 $gutter-right 0 0;\r\n\t}\r\n\r\n\t> * {\r\n\t\tborder-width: 0 0 $gutter-bottom $gutter-left;\r\n\t}\r\n\r\n\t@if ($grid-legacy-support) {\r\n\t\t.lt-ie9 & {\r\n\t\t\t&, > * {\r\n\t\t\t\tborder-color: $grid-gutter-ie-fallback;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t$mq-width: $grid-page-width + $gutter-left + $gutter-right;\r\n\r\n\t@if ($format == 'classes'){\r\n\t\t//only apply the outer horizontal gutters if the screen size is smaller than the page width + gutter size\r\n\t\t&.#{$fullPrefix}grid--outerGutters {\r\n\r\n\t\t\t&, &-v, &-top {\r\n\t\t\t\tborder-top-width: $gutter-top;\r\n\t\t\t}\r\n\r\n\t\t\t@include mq(max, ($mq-width)){\r\n\t\t\t\t&-h-delayed {\r\n\t\t\t\t\tmargin-left: 0;\r\n\t\t\t\t\tmargin-right: 0;\r\n\t\t\t\t}\r\n\t\t\t\t&-left-delayed {\r\n\t\t\t\t\tmargin-left: 0;\r\n\t\t\t\t}\r\n\t\t\t\t&-right-delayed {\r\n\t\t\t\t\tmargin-right: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t@if ($grid-legacy-support) {\r\n\t\t\t\t\t.lt-ie9 & {\r\n\t\t\t\t\t\t&-h-delayed, &-left-delayed, &-right-delayed {\r\n\t\t\t\t\t\t\tmargin-left: -$gutter-left;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t@if ($grid-legacy-support) {\r\n\t\t\t\t.lt-ie9 & {\r\n\t\t\t\t\t&, &-h {\r\n\t\t\t\t\t\tborder-right-width: $gutter-right !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} @else if ($format == 'mixin') {\r\n\t\t//only apply the outer horizontal gutters if the screen size is smaller than the page width + gutter size\r\n\t\t@if($outerGutters){\r\n\t\t\t@include mq(max, $mq-width){\r\n\t\t\t\t@if($outerGutters == 'h-delayed'){\r\n\t\t\t\t\tmargin-left: 0;\r\n\t\t\t\t\tmargin-right: 0;\r\n\t\t\t\t} @else if ($outerGutters == 'left-delayed'){\r\n\t\t\t\t\tmargin-left: 0;\r\n\t\t\t\t} @else if ($outerGutters == 'right-delayed'){\r\n\t\t\t\t\tmargin-right: 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t@if ($grid-legacy-support) {\r\n\t\t\t\t.lt-ie9 & {\r\n\t\t\t\t\t@if (\r\n\t\t\t\t\t\t$outerGutters == 'h-delayed' or\r\n\t\t\t\t\t\t$outerGutters == 'left-delayed' or\r\n\t\t\t\t\t\t$outerGutters == 'right-delayed'\r\n\t\t\t\t\t){\r\n\t\t\t\t\t\tmargin-left: -$gutter-left;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t@if ($outerGutters == true or $outerGutters == 'h'){\r\n\t\t\t\t\t\tborder-right-width: $gutter-right !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@mixin parse-gutter-data($gutter, $systemType, $outerGutters: false){\r\n\t@if (nth($gutter,1) == 'mq') {\r\n\r\n\t\t$gutter_data: nth($gutter,2);\r\n\r\n\t\t@for $i from 1 through length($gutter_data){\r\n\t\t\t$gutter_value: nth($gutter_data, $i);\r\n\t\t\t$gutter_is_mq: false;\r\n\r\n\t\t\t@if (length($gutter_value) > 1){\r\n\t\t\t\t$gutter_is_mq: type-of(nth(nth($gutter_value,2),1)) == 'string';\r\n\t\t\t}\r\n\r\n\t\t\t@if ($gutter_is_mq){\r\n\t\t\t\t$gutterSize: nth($gutter_value,1);\r\n\t\t\t\t$mediaQuery: nth($gutter_value,2);\r\n\t\t\t\t@include mq($mediaQuery){\r\n\t\t\t\t\t@include generate-gutters($systemType, $gutterSize, $outerGutters);\r\n\t\t\t\t}\r\n\t\t\t} @else {\r\n\t\t\t\t@include generate-gutters($systemType, $gutter_value, $outerGutters);\r\n\t\t\t}\r\n\t\t}\r\n\t} @else {\r\n\t\t@include generate-gutters($systemType, $gutter, $outerGutters);\r\n\t}\r\n}\r\n","$mediaQuery: ();\r\n\r\n$mq-ems: false !default;\r\n$mq-em-base: 16px !default;\r\n$mq-debug: false !default;\r\n\r\n@import '_functions';\r\n\r\n@function mediaType($mediaType: false, $hasAnd: true){\r\n\t$media: '';\r\n\t$mediaType: if($mediaType == 'not', 'not all', $mediaType);\r\n\t@if ($mediaType){\r\n\t\t$media: if($hasAnd, $mediaType + ' and ', $mediaType);\r\n\t}\r\n\t@return $media;\r\n}\r\n\r\n@function isRatio($string){\r\n\t@if (type-of($string) == 'string' and $string != 'plus'){\r\n\t\t@if (str-index($string, \"/\")){\r\n\t\t\t@return true;\r\n\t\t}\r\n\t}\r\n\t@return false;\r\n}\r\n\r\n@function isMedia($string){\r\n\t@return type-of($string) == 'string' and $string != 'plus' and not isRatio($string);\r\n}\r\n\r\n@function calculateMQ($range, $breakpoint_1: null, $breakpoint_2: null, $mediaType: false, $debug: $mq-debug){\r\n\r\n\t$swap-values: false;\r\n\r\n\t$mediaTypeString: '' + $mediaType + '';\r\n\r\n\t$invalidMediaType:\r\n\t\t($mediaType != false) and (\r\n\t\t\t(type-of($mediaType) == 'number') or\r\n\t\t\t(str-index($mediaTypeString, '/') != null)\r\n\t\t);\r\n\r\n\t@if ($invalidMediaType == true){\r\n\t\t@error '\"'+$mediaType+'\" is not a valid media type';\r\n\t}\r\n\r\n\t@if ($range == null) {\r\n\t\t@return $mediaType;\r\n\t}\r\n\r\n\t@if ($breakpoint_2 != null){\r\n\r\n\t\t@if (isRatio($breakpoint_1)){\r\n\r\n\t\t\t$A1: get-start($breakpoint_1);\r\n\t\t\t$A2: get-end($breakpoint_1);\r\n\r\n\t\t\t$B1: get-start($breakpoint_2);\r\n\t\t\t$B2: get-end($breakpoint_2);\r\n\r\n\t\t\t@if ($debug) {\r\n\t\t\t\t@debug range_numbers \"('A1/A2', 'B1/B2')\" (A1: $A1, A2: $A2, B1: $B1, B2: $B2);\r\n\t\t\t}\r\n\r\n\t\t\t$swap-values: $A1 / $A2 < $B1 / $B2;\r\n\t\t} @else {\r\n\t\t\t$swap-values: $breakpoint_1 < $breakpoint_2;\r\n\t\t}\r\n\r\n\t\t//Swaps the breakpoint_s around\r\n\t\t@if ($swap-values){\r\n\t\t\t$temp: $breakpoint_1;\r\n\t\t\t$breakpoint_1: $breakpoint_2;\r\n\t\t\t$breakpoint_2: $temp;\r\n\t\t}\r\n\r\n\t} @else {\r\n\t\t$breakpoint_2: 0;\r\n\t}\r\n\r\n\t$mediaString: '';\r\n\r\n\t@if ($range == 'orientation'){\r\n\t\t@if ($breakpoint_1 != 'landscape' and $breakpoint_1 != 'portrait'){\r\n\t\t\t@error '\"orientation\" range only accepts the values \"landscape\" and \"portrait\". Currently providing the value \"#{$breakpoint_1}\".';\r\n\t\t}\r\n\t}\r\n\r\n\t@if ($debug){\r\n\t\t@debug calculateMQ (range: $range, breakpoint_1: $breakpoint_1, breakpoint_2: $breakpoint_2, mediaType: $mediaType);\r\n\t}\r\n\r\n\t@if (str-index($range, 'inside') != null or str-index($range, 'outside') != null){\r\n\t\t@if ($breakpoint_2 == 0) {\r\n\t\t\t@error '\"#{$range}\" range requires a second value. Currently only providing \"#{$breakpoint_1}\" as a value.';\r\n\t\t}\r\n\t} @else {\r\n\t\t@if ($breakpoint_2 != 0) {\r\n\t\t\t@error '\"#{$range}\" range can only take one value. Currently providing both \"#{$breakpoint_1}\" and \"#{$breakpoint_2}\" as values.';\r\n\t\t}\r\n\t}\r\n\r\n\t@if (str-index($range, 'ratio') == null){\r\n\t\t//if a standard media query\r\n\t\t@if (type-of($breakpoint_1) != number and $range != 'orientation'){\r\n\t\t\t@if ($breakpoint_2 != 0) {\r\n\t\t\t\t@error '\"#{$range}\" range requires the breakpoint_s (\"#{$breakpoint_1}\" and \"#{$breakpoint_2}\") to be pixel values';\r\n\t\t\t} @else {\r\n\t\t\t\t@error '\"#{$range}\" range requires the breakpoint_ \"#{$breakpoint_1}\" to be a pixel value';\r\n\t\t\t}\r\n\t\t}\r\n\t} @else {\r\n\t\t//else if it's a ratio...\r\n\t\t@if ((($breakpoint_2 != 0) and (type-of($breakpoint_2) != string))){\r\n\t\t\t@error '\"#{$range}\" range requires the breakpoint_s (\"#{$breakpoint_1}\" and \"#{$breakpoint_2}\") to both be strings in this format \"4 / 3\" (width ratio / height ratio).';\r\n\t\t} @else if (type-of($breakpoint_1) != string) {\r\n\t\t\t@error '\"#{$range}\" range requires the breakpoint_ \"#{$breakpoint_1}\" to be a string in this format \"4 / 3\" (width ratio / height ratio).';\r\n\t\t}\r\n\t}\r\n\r\n\t$breakpoint_1_plus: $breakpoint_1 + 1;\r\n\t$breakpoint_2_plus: $breakpoint_2 + 1;\r\n\r\n\t$media: if($mediaType, $mediaType, '');\r\n\r\n\t@if ($mq-ems) {\r\n\t\t$breakpoint_1: _mq-em($breakpoint_1);\r\n\t\t$breakpoint_2: _mq-em($breakpoint_2);\r\n\t\t$breakpoint_1_plus: _mq-em($breakpoint_1_plus);\r\n\t\t$breakpoint_2_plus: _mq-em($breakpoint_2_plus);\r\n\t}\r\n\r\n\t$min-width: '(min-width: #{$breakpoint_1_plus})';\r\n\t$max-width: '(max-width: #{$breakpoint_1})';\r\n\r\n\t$inside-width: '(max-width: #{$breakpoint_1}) and (min-width: #{$breakpoint_2_plus})';\r\n\t$outside-width: '(max-width: #{$breakpoint_2}), '+$media+'(min-width: #{$breakpoint_1_plus})';\r\n\r\n\t$mediaString: map-get((\r\n\t//*1 value given*/\r\n\t\tmin : $min-width,\r\n\t\tmax : $max-width,\r\n\t\r\n\t\tmin-width : $min-width,\r\n\t\tmax-width : $max-width,\r\n\r\n\t\tmin-height : '(min-height: #{$breakpoint_1_plus})',\r\n\t\tmax-height : '(max-height: #{$breakpoint_1})',\r\n\r\n\t\tratio : '(aspect-ratio: #{$breakpoint_1})',\r\n\t\tmin-ratio : '(min-aspect-ratio: #{$breakpoint_1})',\r\n\t\tmax-ratio : '(max-aspect-ratio: #{$breakpoint_1})',\r\n\r\n\t\tdevice-ratio : '(device-aspect-ratio: #{$breakpoint_1})',\r\n\t\tmin-device-ratio : '(min-device-aspect-ratio: #{$breakpoint_1})',\r\n\t\tmax-device-ratio : '(max-device-aspect-ratio: #{$breakpoint_1})',\r\n\r\n\t\torientation : '(orientation: #{$breakpoint_1})',\r\n\r\n\t//*2 values given*/\r\n\t\tinside : $inside-width,\r\n\t\toutside : $outside-width,\r\n\r\n\t\tinside-width : $inside-width,\r\n\t\toutside-width : $outside-width,\r\n\r\n\t\tinside-height : '(max-height: #{$breakpoint_1}) and (min-height: #{$breakpoint_2_plus})',\r\n\t\toutside-height : '(max-height: #{$breakpoint_2}), '+$media+'(min-height: #{$breakpoint_1_plus})',\r\n\t\t\r\n\t\tinside-ratio : '(max-aspect-ratio: #{$breakpoint_1}) and (min-aspect-ratio: #{$breakpoint_2})',\r\n\t\toutside-ratio : '(max-aspect-ratio: #{$breakpoint_2}), '+$media+'(min-aspect-ratio: #{$breakpoint_1})',\r\n\t\t\r\n\t\tinside-device-ratio : '(max-device-aspect-ratio: #{$breakpoint_1}) and (min-device-aspect-ratio: #{$breakpoint_2})',\r\n\t\toutside-device-ratio : '(max-device-aspect-ratio: #{$breakpoint_2}), '+$media+'(min-device-aspect-ratio: #{$breakpoint_1})',\r\n\t), $range);\r\n\r\n\t@return $mediaString;\r\n}\r\n\r\n@function isBasicQuery($range) {\r\n\t$first_is_string: type-of(nth($range,1)) == string;\r\n\t$longer_than_1: length($range) > 1;\r\n\t$not_plus_statment: true;\r\n\t@if ($longer_than_1) {\r\n\t\t$not_plus_statment: nth($range,2) != 'plus';\r\n\t}\r\n\t@return $first_is_string and $longer_than_1 and $not_plus_statment;\r\n}\r\n\r\n@function get_values($mqSet, $debug: $mq-debug){\r\n\r\n\t@if ($mq-debug) {\r\n\t\t@debug mqSet (length: length($mqSet), mqSet: $mqSet);\r\n\t}\r\n\r\n\t$range: nth($mqSet,1);\r\n\t$breakpoint_1: null;\r\n\t$breakpoint_2: null;\r\n\t$media: false;\r\n\r\n\t@if (length($mqSet) == 1){\r\n\t\t$first: nth($mqSet, 1);\r\n\t\t@if (type-of($first) != 'string'){\r\n\t\t\t@error '\"#{$first}\" is not a valid media type';\r\n\t\t}\r\n\t\t$range: null;\r\n\t\t$media: $first;\r\n\t}\r\n\r\n\t@if (length($mqSet) > 1){\r\n\t\t$breakpoint_1: nth($mqSet, 2);\r\n\t}\r\n\r\n\t@if (length($mqSet) == 3){\r\n\t\t$third: nth($mqSet, 3);\r\n\r\n\t\t@if (type-of($third) == 'number' or isRatio($third)){\r\n\t\t\t$breakpoint_2: $third;\r\n\t\t} @else {\r\n\t\t\t$media: $third;\r\n\t\t}\r\n\t}\r\n\r\n\t@if (length($mqSet) == 4){\r\n\t\t$third: nth($mqSet, 3);\r\n\t\t$fourth: nth($mqSet, 4);\r\n\r\n\t\t@if ($fourth == false and isMedia($third)){\r\n\t\t\t$media: $third;\r\n\t\t} @else {\r\n\t\t\t$breakpoint_2: $third;\r\n\t\t\t$media: $fourth;\r\n\t\t}\r\n\r\n\t\t@if ($media == \" and \") {\r\n\t\t\t$media: '';\r\n\t\t}\r\n\t}\r\n\r\n\t$finalValues: (\r\n\t\trange: $range,\r\n\t\tbreakpoint_1: $breakpoint_1,\r\n\t\tbreakpoint_2: $breakpoint_2,\r\n\t\tmedia: mediaType($media, $range != null),\r\n\t);\r\n\r\n\t@if ($debug) {\r\n\t\t@debug get_values_result $finalValues;\r\n\t}\r\n\r\n\t@return $finalValues;\r\n}\r\n\r\n@function get_media($mqSet){\r\n\t@return map-get( get_values($mqSet), media);\r\n}\r\n\r\n@function calculateBasicQuery($mqSet, $isAndStatement: false, $debug: $mq-debug){\r\n\t$values: get_values($mqSet, $debug);\r\n\r\n\t$range: map-get($values, range);\r\n\t$breakpoint_1: map-get($values, breakpoint_1);\r\n\t$breakpoint_2: map-get($values, breakpoint_2);\r\n\t$media: map-get($values, media);\r\n\r\n\t@if ($range == null) {\r\n\t\t//if only a media type is given return nothing because it is added elsewhere\r\n\t\t@return '';\r\n\t}\r\n\r\n\t@if ((str-index($range, 'outside') != null) and $isAndStatement){\r\n\t\t$error: 'All \"outside\" range types are incompatible with \"plus\" statements: (' + $mqSet + ')';\r\n\t\t@error $error;\r\n\t}\r\n\r\n\t@return calculateMQ($range, $breakpoint_1, $breakpoint_2, $media, $debug: $debug);\r\n}\r\n\r\n@function joinQueries($range, $queryString: (), $debug: $mq-debug){\r\n\r\n\t$isAndStatement: false;\r\n\t$contains_media_only_statement: false;\r\n\t$media_statement_at_start: true;\r\n\r\n\t@if (length($range) > 1) {\r\n\t\t@for $i from 1 through length($range) {\r\n\t\t\t$statement: nth($range,$i);\r\n\t\t\t@if ($debug) {\r\n\t\t\t\t@debug joinQueries_statement $statement;\r\n\t\t\t}\r\n\t\t\t$mediaNotFirst: $i != 1 and isMedia($statement);\r\n\t\t\t@if ($statement == 'plus') {\r\n\t\t\t\t$isAndStatement: true;\r\n\t\t\t\t@if ($i == 2 and length(nth($range,1)) == 1) {\r\n\t\t\t\t\t$contains_media_only_statement: true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t@if ($mediaNotFirst){\r\n\t\t\t\t$media_statement_at_start: false;\r\n\t\t\t}\r\n\t\t}\r\n\t} @else if (type-of(nth($range,1)) == 'string') {\r\n\t\t$contains_media_only_statement: true;\r\n\t}\r\n\r\n\t@if ($isAndStatement and not $media_statement_at_start) {\r\n\t\t@error 'Media type definitions must be specified at the start of plus statements: (#{$range)})';\r\n\t}\r\n\r\n\t//Uses this functionality if using a single level MQ variable\r\n\t//eg:\r\n\t//$MQ-example--single: inside, 1000px, 500px;\r\n\t//@include mq($MQ-example--single){}\r\n\t@if (isBasicQuery($range)){\r\n\r\n\t\t@return get_media($range) + calculateBasicQuery($range, $isAndStatement, $debug: $debug);\r\n\r\n\t//Uses this functionality if using a multi level MQ variable\r\n\t//eg:\r\n\t//$MQ-example--multiple:\r\n\t//\t(inside, 1000px, 500px),\r\n\t//\t(min, 1200px)\r\n\t//;\r\n\t//@include mq($MQ-example--multiple){}\r\n\t} @else {\r\n\r\n\t\t@each $mqSet in $range {\r\n\r\n\t\t\t@if ($mqSet != 'plus') {\r\n\t\t\t\t@if (isBasicQuery($mqSet)){\r\n\r\n\t\t\t\t\t$newQuery: calculateBasicQuery($mqSet, $isAndStatement, $debug: $debug);\r\n\r\n\t\t\t\t\t$media: get_media($mqSet);\r\n\r\n\t\t\t\t\t@if ($isAndStatement) {\r\n\t\t\t\t\t\t@if ($queryString == ()){\r\n\t\t\t\t\t\t\t$queryString: $media + $newQuery;\r\n\t\t\t\t\t\t} @else if ($newQuery != '') {\r\n\t\t\t\t\t\t\t$queryString: $queryString + ' and ' + $newQuery;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t$queryString: append($queryString, $media + $newQuery, 'comma');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} @else {\r\n\r\n\t\t\t\t\t$is_media_only_statment: $contains_media_only_statement and type-of($mqSet) == 'string';\r\n\r\n\t\t\t\t\t@if ($isAndStatement) {\r\n\t\t\t\t\t\t@if ($is_media_only_statment) {\r\n\t\t\t\t\t\t\t$queryString: mediaType($mqSet, false);\r\n\t\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t\t$queryString: joinQueries($mqSet, $queryString, $debug);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t@if (length($queryString) > 1){\r\n\t\t\t\t\t\t\t$error: 'mq-scss does not support \"or\" statements inside \"plus\" statements: ' + $queryString;\r\n\t\t\t\t\t\t\t@error $error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t@if ($is_media_only_statment) {\r\n\t\t\t\t\t\t\t$queryString: $mqSet;\r\n\t\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t\t$queryString: append($queryString, joinQueries($mqSet, $debug: $debug), 'comma');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@return $queryString;\r\n\t}\r\n}\r\n\r\n@mixin mq($range, $breakpoint_1: null, $breakpoint_2: null, $mediaType: false, $debug: $mq-debug) {\r\n\r\n\t@if ($debug) {\r\n\t\t@debug $range;\r\n\t}\r\n\r\n\t@if (length($range) > 1) {\r\n\t\t$finalOutput: joinQueries($range, $debug: $debug);\r\n\t\t@if ($debug) {\r\n\t\t\t@debug '!!!!! FINAL OUTPUT: @media ' + $finalOutput;\r\n\t\t}\r\n\t\t@media #{$finalOutput} {\r\n\t\t\t@content;\r\n\t\t}\r\n\r\n\t//Uses this functionality if placing MQ data inline\r\n\t//eg:\r\n\t//@include mq(inside, 1000px, 500px, 'screen');\r\n\t} @else {\r\n\t\t//standardises the values to prevent mediaType from getting confused with breakpoint_2\r\n\t\t$mediaOnly: $breakpoint_1 == null and $breakpoint_2 == null and $mediaType == false;\r\n\t\t@if ($debug) {\r\n\t\t\t@debug inline_mq_values (range: $range, breakpoint_1: $breakpoint_1, breakpoint_2: $breakpoint_2, mediaType: $mediaType, mediaOnly: $mediaOnly);\r\n\t\t}\r\n\t\t$values: get_values(if($mediaOnly, $range, ($range $breakpoint_1 $breakpoint_2 $mediaType)), $debug: $debug);\r\n\r\n\t\t$newRange: map-get($values, range);\r\n\t\t$newWidth1: map-get($values, breakpoint_1);\r\n\t\t$newWidth2: map-get($values, breakpoint_2);\r\n\t\t$newMedia: map-get($values, media);\r\n\r\n\t\t@if ($mediaOnly) {\r\n\r\n\t\t\t@if ($debug) {\r\n\t\t\t\t@debug '!!!!! FINAL OUTPUT: @media ' + $newMedia;\r\n\t\t\t}\r\n\r\n\t\t\t@media #{ $newMedia } {\r\n\t\t\t\t@content;\r\n\t\t\t}\r\n\r\n\t\t} @else {\r\n\r\n\t\t\t$finalMQ: $newMedia + calculateMQ($newRange, $newWidth1, $newWidth2, $debug: $debug);\r\n\r\n\t\t\t@if ($debug) {\r\n\t\t\t\t@debug '!!!!! FINAL OUTPUT: @media ' + $finalMQ ;\r\n\t\t\t}\r\n\r\n\t\t\t@media #{ $finalMQ } {\r\n\t\t\t\t@content;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t@if ($debug){\r\n\t\t//spacer for seperating results\r\n\t\t@debug '';\r\n\t}\r\n\r\n}\r\n\r\n@mixin retina($density: 2) {\r\n\t\t@media\r\n\t\tonly screen and (min-device-pixel-ratio: $density),\r\n\t\tonly screen and (min-resolution: $density * 96ppi),\r\n\t\tonly screen and (min-resolution: $density * 1dppx) {\r\n\t\t\t@content;\r\n\t}\r\n}\r\n","/*This is an automatically generated file. DO NOT EDIT! Update the icon font by dumping the contents of icomoon packages into the icomoon folder*/\n/*\r\n@if (variable-exists(testing)){\r\n\t//code that fires if $testing variable is defined\r\n\t//(note that there is no \"$\" at the front of \"testing\")\r\n} @else {\r\n\t//code that fires if $testing variable is undefined\r\n}\r\n*/\n.grid--cols-1 > * {\n  width: calc(100% / 1);\n}\n\n.grid--cols-2 > * {\n  width: calc(100% / 2);\n}\n\n.grid--cols-2 > .grid__cell--span-2 {\n  width: calc(2 / 2 * 100%);\n}\n\n@media (max-width: 600px) {\n  .grid--cols-2:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 1);\n  }\n}\n\n.grid--cols-3 > * {\n  width: calc(100% / 3);\n}\n\n.grid--cols-3 > .grid__cell--span-2 {\n  width: calc(2 / 3 * 100%);\n}\n\n.grid--cols-3 > .grid__cell--span-3 {\n  width: calc(3 / 3 * 100%);\n}\n\n@media (max-width: 960px) {\n  .grid--cols-3:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 2);\n  }\n}\n\n@media (max-width: 600px) {\n  .grid--cols-3:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 1);\n  }\n}\n\n.grid--cols-4 > * {\n  width: calc(100% / 4);\n}\n\n.grid--cols-4 > .grid__cell--span-2 {\n  width: calc(2 / 4 * 100%);\n}\n\n.grid--cols-4 > .grid__cell--span-3 {\n  width: calc(3 / 4 * 100%);\n}\n\n.grid--cols-4 > .grid__cell--span-4 {\n  width: calc(4 / 4 * 100%);\n}\n\n@media (max-width: 960px) {\n  .grid--cols-4:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 2);\n  }\n}\n\n@media (max-width: 480px) {\n  .grid--cols-4:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 1);\n  }\n}\n\n.grid--cols-5 > * {\n  width: calc(100% / 5);\n}\n\n.grid--cols-5 > .grid__cell--span-2 {\n  width: calc(2 / 5 * 100%);\n}\n\n.grid--cols-5 > .grid__cell--span-3 {\n  width: calc(3 / 5 * 100%);\n}\n\n.grid--cols-5 > .grid__cell--span-4 {\n  width: calc(4 / 5 * 100%);\n}\n\n.grid--cols-5 > .grid__cell--span-5 {\n  width: calc(5 / 5 * 100%);\n}\n\n@media (max-width: 960px) {\n  .grid--cols-5:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 3);\n  }\n}\n\n@media (max-width: 600px) {\n  .grid--cols-5:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 2);\n  }\n}\n\n@media (max-width: 480px) {\n  .grid--cols-5:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 1);\n  }\n}\n\n.grid--cols-6 > * {\n  width: calc(100% / 6);\n}\n\n.grid--cols-6 > .grid__cell--span-2 {\n  width: calc(2 / 6 * 100%);\n}\n\n.grid--cols-6 > .grid__cell--span-3 {\n  width: calc(3 / 6 * 100%);\n}\n\n.grid--cols-6 > .grid__cell--span-4 {\n  width: calc(4 / 6 * 100%);\n}\n\n.grid--cols-6 > .grid__cell--span-5 {\n  width: calc(5 / 6 * 100%);\n}\n\n.grid--cols-6 > .grid__cell--span-6 {\n  width: calc(6 / 6 * 100%);\n}\n\n@media (max-width: 960px) {\n  .grid--cols-6:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 3);\n  }\n}\n\n@media (max-width: 600px) {\n  .grid--cols-6:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 2);\n  }\n}\n\n@media (max-width: 480px) {\n  .grid--cols-6:not(.grid--noMQs) > *:not([class*=\"cell--span-\"]) {\n    width: calc(100% / 1);\n  }\n}\n\n.grid {\n  box-sizing: border-box;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  min-width: 100%;\n  border: 0 solid transparent;\n  display: flex;\n  align-content: stretch;\n}\n\n.grid[class*=\"grid--cols\"]:not(.grid--noWrap) {\n  flex-wrap: wrap;\n}\n\n.grid__wrapper {\n  overflow: hidden;\n}\n\n.grid__paddedWrapper {\n  padding-bottom: 1px;\n}\n\n.grid__cell {\n  box-sizing: border-box;\n  min-width: 0%;\n  max-width: 100%;\n  display: block;\n  padding: 0;\n  margin: 0;\n  background-clip: padding-box !important;\n  border: 0 solid transparent;\n}\n\n.grid:not([class*=\"grid--cols\"]):not(.grid--noStretch):not([class*=\"grid--align-\"]):not([class*=\"grid--space-\"]):not(.grid--noResize)\n> .grid__cell:not(.grid__cell--noStretch):not(.grid__cell--noResize) {\n  flex-grow: 1;\n}\n\n.grid__cell[class*=\"cell--span-\"] {\n  flex-grow: 1;\n}\n\n.grid__cell--vAlign-center {\n  align-self: center;\n}\n\n.grid__cell--vAlign-top {\n  align-self: flex-start;\n}\n\n.grid__cell--vAlign-bottom {\n  align-self: flex-end;\n}\n\n.grid__cell.grid {\n  display: flex;\n}\n\n.grid__cell, .grid__cell * > {\n  max-width: 100%;\n  flex-shrink: 1;\n}\n\n.grid__cell--stretch {\n  flex-grow: 1;\n}\n\n.grid__cell--noStretch {\n  flex-grow: 0;\n}\n\n.grid__cell--noShrink {\n  flex-shrink: 0;\n}\n\n.grid__cell--noResize {\n  flex-shrink: 0;\n  flex-grow: 0;\n}\n\n.grid__inner {\n  display: block;\n  box-sizing: border-box;\n}\n\n.grid--gutter-20 {\n  margin: 0 -20px -20px -20px;\n  border-width: 0 20px 0 0;\n}\n\n.grid--gutter-20 > * {\n  border-width: 0 0 20px 20px;\n}\n\n.grid--gutter-20.grid--outerGutters, .grid--gutter-20.grid--outerGutters-v, .grid--gutter-20.grid--outerGutters-top {\n  border-top-width: 20px;\n}\n\n@media (max-width: 1159px) {\n  .grid--gutter-20.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-20.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-20.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-10-30 {\n  margin: 0 -30px -10px -30px;\n  border-width: 0 30px 0 0;\n}\n\n.grid--gutter-10-30 > * {\n  border-width: 0 0 10px 30px;\n}\n\n.grid--gutter-10-30.grid--outerGutters, .grid--gutter-10-30.grid--outerGutters-v, .grid--gutter-10-30.grid--outerGutters-top {\n  border-top-width: 10px;\n}\n\n@media (max-width: 1179px) {\n  .grid--gutter-10-30.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-10-30.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-10-30.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-moduleName {\n  margin: 0 -20px -20px -20px;\n  border-width: 0 20px 0 0;\n}\n\n.grid--gutter-moduleName > * {\n  border-width: 0 0 20px 20px;\n}\n\n.grid--gutter-moduleName.grid--outerGutters, .grid--gutter-moduleName.grid--outerGutters-v, .grid--gutter-moduleName.grid--outerGutters-top {\n  border-top-width: 20px;\n}\n\n@media (max-width: 1159px) {\n  .grid--gutter-moduleName.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-moduleName.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-moduleName.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-gutterName {\n  margin: 0 -20px -20px -20px;\n  border-width: 0 20px 0 0;\n}\n\n.grid--gutter-gutterName > * {\n  border-width: 0 0 20px 20px;\n}\n\n.grid--gutter-gutterName.grid--outerGutters, .grid--gutter-gutterName.grid--outerGutters-v, .grid--gutter-gutterName.grid--outerGutters-top {\n  border-top-width: 20px;\n}\n\n@media (max-width: 1159px) {\n  .grid--gutter-gutterName.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-gutterName.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-gutterName.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-mixedSizeGutter {\n  margin: 0 -10px -30px -10px;\n  border-width: 0 10px 0 0;\n}\n\n.grid--gutter-mixedSizeGutter > * {\n  border-width: 0 0 30px 10px;\n}\n\n.grid--gutter-mixedSizeGutter.grid--outerGutters, .grid--gutter-mixedSizeGutter.grid--outerGutters-v, .grid--gutter-mixedSizeGutter.grid--outerGutters-top {\n  border-top-width: 30px;\n}\n\n@media (max-width: 1139px) {\n  .grid--gutter-mixedSizeGutter.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-mixedSizeGutter.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-mixedSizeGutter.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-nav {\n  margin: 0 -10px -10px -10px;\n  border-width: 0 10px 0 0;\n}\n\n.grid--gutter-nav > * {\n  border-width: 0 0 10px 10px;\n}\n\n.grid--gutter-nav.grid--outerGutters, .grid--gutter-nav.grid--outerGutters-v, .grid--gutter-nav.grid--outerGutters-top {\n  border-top-width: 10px;\n}\n\n@media (max-width: 1139px) {\n  .grid--gutter-nav.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-nav.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-nav.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-share {\n  margin: 0 -20px -20px -20px;\n  border-width: 0 20px 0 0;\n}\n\n.grid--gutter-share > * {\n  border-width: 0 0 20px 20px;\n}\n\n.grid--gutter-share.grid--outerGutters, .grid--gutter-share.grid--outerGutters-v, .grid--gutter-share.grid--outerGutters-top {\n  border-top-width: 20px;\n}\n\n@media (max-width: 1159px) {\n  .grid--gutter-share.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-share.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-share.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-body {\n  margin: 0 -30px -30px -30px;\n  border-width: 0 30px 0 0;\n}\n\n.grid--gutter-body > * {\n  border-width: 0 0 30px 30px;\n}\n\n.grid--gutter-body.grid--outerGutters, .grid--gutter-body.grid--outerGutters-v, .grid--gutter-body.grid--outerGutters-top {\n  border-top-width: 30px;\n}\n\n@media (max-width: 1179px) {\n  .grid--gutter-body.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-body.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-body.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-tabs {\n  margin: 0 -10px -10px -10px;\n  border-width: 0 10px 0 0;\n}\n\n.grid--gutter-tabs > * {\n  border-width: 0 0 10px 10px;\n}\n\n.grid--gutter-tabs.grid--outerGutters, .grid--gutter-tabs.grid--outerGutters-v, .grid--gutter-tabs.grid--outerGutters-top {\n  border-top-width: 10px;\n}\n\n@media (max-width: 1139px) {\n  .grid--gutter-tabs.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-tabs.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-tabs.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-logo {\n  margin: 0 -20px -20px -20px;\n  border-width: 0 20px 0 0;\n}\n\n.grid--gutter-logo > * {\n  border-width: 0 0 20px 20px;\n}\n\n.grid--gutter-logo.grid--outerGutters, .grid--gutter-logo.grid--outerGutters-v, .grid--gutter-logo.grid--outerGutters-top {\n  border-top-width: 20px;\n}\n\n@media (max-width: 1159px) {\n  .grid--gutter-logo.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-logo.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-logo.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n@media (max-width: 480px) {\n  .grid--gutter-logo {\n    margin: 0 -5px -10px -5px;\n    border-width: 0 5px 0 0;\n  }\n  .grid--gutter-logo > * {\n    border-width: 0 0 10px 5px;\n  }\n  .grid--gutter-logo.grid--outerGutters, .grid--gutter-logo.grid--outerGutters-v, .grid--gutter-logo.grid--outerGutters-top {\n    border-top-width: 10px;\n  }\n}\n\n@media (max-width: 480px) and (max-width: 1129px) {\n  .grid--gutter-logo.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-logo.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-logo.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--gutter-mediaQueryGutter {\n  margin: 0 -30px -50px -30px;\n  border-width: 0 30px 0 0;\n}\n\n.grid--gutter-mediaQueryGutter > * {\n  border-width: 0 0 50px 30px;\n}\n\n.grid--gutter-mediaQueryGutter.grid--outerGutters, .grid--gutter-mediaQueryGutter.grid--outerGutters-v, .grid--gutter-mediaQueryGutter.grid--outerGutters-top {\n  border-top-width: 50px;\n}\n\n@media (max-width: 1179px) {\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n@media (max-width: 800px) {\n  .grid--gutter-mediaQueryGutter {\n    margin: 0 -10px -30px -10px;\n    border-width: 0 10px 0 0;\n  }\n  .grid--gutter-mediaQueryGutter > * {\n    border-width: 0 0 30px 10px;\n  }\n  .grid--gutter-mediaQueryGutter.grid--outerGutters, .grid--gutter-mediaQueryGutter.grid--outerGutters-v, .grid--gutter-mediaQueryGutter.grid--outerGutters-top {\n    border-top-width: 30px;\n  }\n}\n\n@media (max-width: 800px) and (max-width: 1139px) {\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n@media (max-width: 700px) {\n  .grid--gutter-mediaQueryGutter {\n    margin: 0 -10px -10px -10px;\n    border-width: 0 10px 0 0;\n  }\n  .grid--gutter-mediaQueryGutter > * {\n    border-width: 0 0 10px 10px;\n  }\n  .grid--gutter-mediaQueryGutter.grid--outerGutters, .grid--gutter-mediaQueryGutter.grid--outerGutters-v, .grid--gutter-mediaQueryGutter.grid--outerGutters-top {\n    border-top-width: 10px;\n  }\n}\n\n@media (max-width: 700px) and (max-width: 1139px) {\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-h-delayed {\n    margin-left: 0;\n    margin-right: 0;\n  }\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-left-delayed {\n    margin-left: 0;\n  }\n  .grid--gutter-mediaQueryGutter.grid--outerGutters-right-delayed {\n    margin-right: 0;\n  }\n}\n\n.grid--outerGutters {\n  margin: 0;\n}\n\n.grid--outerGutters-v {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.grid--outerGutters-h {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.grid--outerGutters-top {\n  margin-top: 0;\n}\n\n.grid--outerGutters-bottom {\n  margin-bottom: 0;\n}\n\n.grid--outerGutters-left {\n  margin-left: 0;\n}\n\n.grid--outerGutters-right {\n  margin-right: 0;\n}\n\n.grid--hasInners > * {\n  display: flex;\n  align-items: stretch;\n}\n\n.grid--hasInners > * > * {\n  display: block;\n  width: 100%;\n}\n\n.grid--hasInners > * > *.grid {\n  display: flex;\n}\n\n.grid--vAlign-center {\n  align-items: center;\n}\n\n.grid--vAlign-top {\n  align-items: flex-start;\n}\n\n.grid--vAlign-bottom {\n  align-items: flex-end;\n}\n\n.grid--vertical {\n  flex-direction: column;\n}\n\n.grid--stretch > * {\n  flex-grow: 1;\n}\n\n.grid--noStretch > * {\n  flex-grow: 0;\n}\n\n.grid--noShrink > * {\n  flex-shrink: 0;\n}\n\n.grid--noResize > * {\n  flex-shrink: 0;\n  flex-grow: 0;\n}\n\n.grid--mini {\n  min-width: 0;\n}\n\n@media (max-width: 1119px) {\n  .grid {\n    flex-wrap: wrap;\n  }\n}\n\n.grid--wrap {\n  flex-wrap: wrap;\n}\n\n.grid--noWrap {\n  flex-wrap: nowrap;\n}\n\n.grid--space-between > *, .grid--space-around > * {\n  flex-grow: 0;\n}\n\n.grid--space-between {\n  justify-content: space-between;\n}\n\n.grid--space-around {\n  justify-content: space-around;\n}\n\n.grid--align-left > *, .grid--align-center > *, .grid--align-right > * {\n  flex-grow: 0;\n}\n\n.grid--align-left {\n  justify-content: flex-start;\n}\n\n.grid--align-center {\n  justify-content: center;\n}\n\n.grid--align-right {\n  justify-content: flex-end;\n}\n\n/*@function grad(\t$gradColor1,\r\n\t$gradColor2: null,\r\n\t$type: v,\r\n\t$settings: ()\r\n){\r\n\r\n}*/\n/*@include MG-animate(0.5s);\r\n@include MG-animate((\r\n(\r\n\tattributes: margin padding background, (default: all)\r\n\tduration: 0.2s,\r\n\tdelay: '',\r\n\tease: ease-in-out\r\n), (\r\n\tattributes: border-radius,\r\n\tduration: 0.5s\r\n)\r\n));\r\n*/\n/*\r\n//apply color variations and overrides to specific modules more easily for stronger color application\r\n\r\n//usage:\r\n.module {\r\n\t@include MG-brandColors((\r\n\t\tborder-left-color : 'text',\r\n\t\toutline-color: 'color'\r\n\t));\r\n}\r\n\r\n//equivalent to:\r\n\r\n.color-1 .module {\r\n\tborder-left-color : brand(1,'text');\r\n\toutline-color : brand(1);\r\n}\r\n.color-2 .module {\r\n\tborder-left-color : brand(2,'text');\r\n\toutline-color : brand(2);\r\n}\r\n\r\netc.\r\n\r\n*/\n.templateList {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 9999999999999999999999999;\n  background: #fff;\n  background: rgba(255, 255, 255, 0.9);\n  overflow-y: scroll;\n  transition: all 0.5s ease-in-out;\n  transform: scale(0);\n}\n\n.templateList__body {\n  padding: 10vh;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.no-csstransforms .templateList {\n  display: none;\n}\n\n.templateList.-isOpen {\n  transform: scale(1);\n}\n\n.templateList.-isOpen .no-csstransforms {\n  display: block;\n}\n\n.templateList__focus {\n  height: 0;\n  display: block;\n}\n\n.templateList__close {\n  outline: none;\n  box-shadow: none;\n}\n\n.templateList__heading {\n  margin-bottom: 20px;\n}\n\n.templateList__list {\n  width: 100%;\n  max-width: 350px;\n  text-align: center;\n}\n\n.templateList__item {\n  margin-top: 20px;\n}\n\n.templateList__item:first-child {\n  margin-top: 0;\n}\n\n.templateList__link {\n  display: block;\n  padding: 15px;\n  text-transform: capitalize;\n}\n\n.templateList__link.-isActive {\n  background: #F16031;\n}\n","//NPM installed mixins are loaded from this file\r\n//This allows them to be used in both the main.scss file and the prototypeOnly.scss file\r\n\r\n//mq\r\n//$mq-ems: true;\r\n@import '../../../node_modules/mq-scss/mq';\r\n\r\n//Grid system global gutter sizes\r\n$grid-cell-gutters: (\r\n\t20 : 20px,\r\n\t'10-30' : 10px 30px,\r\n\t'moduleName' : 20px,\r\n\t'gutterName' : 20px,\r\n\t'mixedSizeGutter' : 30px 10px,\r\n\t'nav' : 10px,\r\n\t'share' : 20px,\r\n\t'body' : 30px,\r\n\t'tabs' : 10px,\r\n\t'logo' : mq (\r\n\t\t20px,\r\n\t\t(10px 5px) (max, bp('small'))\r\n\t),\r\n\t'mediaQueryGutter' : mq (\r\n\t\t(50px 30px), //*default*/\r\n\t\t(30px 10px) (max, 800px), //*affected by media query*/\r\n\t\t10px (max, 700px) //*affected by media query*/\r\n\t)\r\n);\r\n\r\n$grid-page-width: bp('page');\r\n\r\n//IE8 can't do transparent borders.\r\n//This defines what the default color for gutters is in IE.\r\n$grid-gutter-ie-fallback: $CF-body__bg;\r\n\r\n@import '../../../grid-mixin';\r\n@import '../../../grid-classes';\r\n","// templateList styles\r\n.templateList {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tz-index: 9999999999999999999999999;\r\n\tbackground: #fff;\r\n\tbackground: rgba(#fff,0.9);\r\n\toverflow-y: scroll;\r\n\ttransition: all 0.5s ease-in-out;\r\n\ttransform: scale(0);\r\n\r\n\t&__body {\r\n\t\tpadding: 10vh;\r\n\t\tmin-height: 100vh;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.no-csstransforms & {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t&.-isOpen {\r\n\t\ttransform: scale(1);\r\n\r\n\t\t.no-csstransforms {\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\r\n\t&__focus {\r\n\t\theight: 0;\r\n\t\tdisplay: block;\r\n\t}\r\n\r\n\t&__close {\r\n\t\toutline: none;\r\n\t\tbox-shadow: none;\r\n\t}\r\n\r\n\t&__heading {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t&__list {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 350px;\r\n\t\ttext-align: center;\r\n\t\t//flex-grow: 1;\r\n\t}\r\n\t\t&__item {\r\n\t\t\tmargin-top: 20px;\r\n\t\t\t&:first-child {\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t\t&__link {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tpadding: 15px;\r\n\t\t\t\ttext-transform: capitalize;\r\n\r\n\t\t\t\t&.-isActive {\r\n\t\t\t\t\tbackground: brand(2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n}","//changes the intensity of color change on hover\r\n$V-hoverModifier: 60%;\r\n\r\n//lists the primary brand colors of the site.\r\n//Greys do not belong in this list unless it is a MAJOR brand color\r\n$brand: (\r\n\t//*Main color*/\r\n\tcolor: #63a52a,\r\n\r\n\t// the color this turns into on hover\r\n\thover: #90D355,\r\n\r\n\t//*if set as a background color, the text inside will most likely be this color*/\r\n\ttext: #000,\r\n),\r\n\r\n//*Second most prominent brand color etc. */\r\n(\r\n\tcolor: #F16031,\r\n\ttext: #000,\r\n),\r\n(\r\n\tcolor: #510558,\r\n\ttext: #fff,\r\n),\r\n(\r\n\tcolor: #3F53B2,\r\n\ttext: #fff,\r\n),\r\n(\r\n\tcolor: #722912,\r\n\ttext: #fff,\r\n),\r\n(\r\n\tcolor: #293F2D,\r\n\ttext: #fff,\r\n);\r\n"]}