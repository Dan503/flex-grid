{"version":3,"sources":["src/_0_scripts/node_modules/browser-pack/_prelude.js","src/_0_scripts/node_modules/base64-js/index.js","src/_0_scripts/main.js","src/_0_scripts/node_modules/buffer/index.js","src/_0_scripts/node_modules/buffer/node_modules/isarray/index.js","src/_0_scripts/node_modules/clone/clone.js","src/_0_scripts/node_modules/default-to/index.js","src/_0_scripts/node_modules/ieee754/index.js","src/_0_scripts/src/_0_scripts/_functions/GA_trackEvent.js","src/_0_scripts/src/_0_scripts/src/_0_scripts/main.js","src/_0_scripts/src/_1_modules/accordion/src/_1_modules/accordion/accordion.js","src/_0_scripts/src/_1_modules/share/src/_1_modules/share/share.js","src/_0_scripts/src/_1_modules/~on-page-load-JS/src/_1_modules/~on-page-load-JS/defaultThemeScript.js","src/_0_scripts/src/_1_modules/~on-page-load-JS/src/_1_modules/~on-page-load-JS/isFirefox.js","src/_0_scripts/src/_1_modules/~on-page-load-JS/src/_1_modules/~on-page-load-JS/isIE.js","src/_0_scripts/src/_1_modules/~on-page-load-JS/src/_1_modules/~on-page-load-JS/newWindow.js","src/_0_scripts/src/_1_modules/~on-page-load-JS/src/_1_modules/~on-page-load-JS/smoothAnchors.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","placeHoldersCount","b64","len","byteLength","toByteArray","j","tmp","placeHolders","arr","Arr","L","revLookup","charCodeAt","tripletToBase64","num","lookup","encodeChunk","uint8","start","end","output","push","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","Array","2","global","typedArraySupport","__proto__","prototype","foo","subarray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","this","allocUnsafe","from","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","m","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","c","hi","lo","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","self","window","base64-js","isarray","3","4","clone","parent","circular","depth","includeNonEnumerable","_clone","child","proto","nativeMap","nativeSet","nativePromise","resolve","reject","then","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","useBuffer","create","getPrototypeOf","index","allParents","allChildren","keyIterator","keys","next","done","keyChild","valueChild","get","iterator","entryChild","add","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","symbol","descriptor","enumerable","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","re","flags","ignoreCase","multiline","Map","_","Set","Promise","clonePrototype","5","_interopRequireDefault","__esModule","default","isObj","_typeof","constructor","defaultTo","variable","defaultVal","finalParams","_clone2","key","hasOwnProperty","subKey","applyDefaults","defaults","console","log","property","6","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","abs","LN2","7","GA_trackEvent","category","action","label","eventCat","eventAct","eventLabel","ga","8","_jquery","_jquery2","_accordion","_accordion2","_share","_share2","_defaultThemeScript","_defaultThemeScript2","_isFirefox","_isFirefox2","_isIE","_isIE2","_newWindow","_newWindow2","_smoothAnchors","_smoothAnchors2","addClass","../_1_modules/accordion/accordion","../_1_modules/share/share","../_1_modules/~on-page-load-JS/defaultThemeScript","../_1_modules/~on-page-load-JS/isFirefox","../_1_modules/~on-page-load-JS/isIE","../_1_modules/~on-page-load-JS/newWindow","../_1_modules/~on-page-load-JS/smoothAnchors","9","_classCallCheck","instance","Constructor","_createClass","defineProperties","props","writable","protoProps","staticProps","_module","each","accordion","_revealer","_toggle","open_","elem","_this","$elem","$toggle","find","$revealer","click","preventDefault","toggle","slideToggle","toggleClass","10","_link","share__window","_defaultTo","_defaultTo2","_GA_trackEvent","_GA_trackEvent2","titleText","text","pageTitle","split","window_settings","twitter","window_name","height","facebook","linkedin","width","mail","openWindow","_thisLink","url","attr","shareType","settings","dualScreenLeft","screenLeft","screen","left","dualScreenTop","screenTop","top","w","innerWidth","document","documentElement","clientWidth","h","innerHeight","clientHeight","open","_functions/GA_trackEvent","default-to","11","pre","lines","wrap","splice","before","12","isFirefox","navigator","userAgent","13","isIE","Modernizr","flexbox","flexwrap","14","file_types","image_types","href","file_type","inArray","hasClass","location","host","all_new_window_links","on","classStart","extension","15","pathname","hostname","hash","animate","scrollTop"],"mappings":"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","file":"assets/scripts/main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n},{}],2:[function(require,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"base64-js\":1,\"ieee754\":6,\"isarray\":3}],3:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],4:[function(require,module,exports){\n(function (Buffer){\nvar clone = (function() {\n'use strict';\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (parent instanceof nativeMap) {\n      child = new nativeMap();\n    } else if (parent instanceof nativeSet) {\n      child = new nativeSet();\n    } else if (parent instanceof nativePromise) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else if (parent instanceof Error) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (parent instanceof nativeMap) {\n      var keyIterator = parent.keys();\n      while(true) {\n        var next = keyIterator.next();\n        if (next.done) {\n          break;\n        }\n        var keyChild = _clone(next.value, depth - 1);\n        var valueChild = _clone(parent.get(next.value), depth - 1);\n        child.set(keyChild, valueChild);\n      }\n    }\n    if (parent instanceof nativeSet) {\n      var iterator = parent.keys();\n      while(true) {\n        var next = iterator.next();\n        if (next.done) {\n          break;\n        }\n        var entryChild = _clone(next.value, depth - 1);\n        child.add(entryChild);\n      }\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":2}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.applyDefaults = exports.defaultTo = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = defaultTo;\n\nvar _clone = require('clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isObj(obj) {\n\treturn (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj.constructor !== Array;\n}\n\n//- a function for easily applying default values, especially good for objects\nfunction defaultTo(variable, defaultVal) {\n\n\t//if it's an object, treat each setting in the object seperately\n\tif (isObj(defaultVal)) {\n\t\tvar finalParams = (0, _clone2.default)(defaultVal);\n\n\t\t// We iterate over each property of the paramObject\n\t\tfor (var key in variable) {\n\n\t\t\t// If the current property wasn't inherited, proceed\n\t\t\tif (variable.hasOwnProperty(key)) {\n\t\t\t\t// If the current property is defined, add it to finalParams\n\t\t\t\tif (variable[key] !== 'undefined') {\n\t\t\t\t\tfinalParams[key] = variable[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//if the value is an object, run the defaultTo function on the object\n\t\t\tif (isObj(defaultVal[key])) {\n\t\t\t\tfor (var subKey in defaultVal[key]) {\n\t\t\t\t\tif (defaultVal[key].hasOwnProperty(subKey)) {\n\t\t\t\t\t\tfinalParams[key][subKey] = defaultTo(variable[key][subKey], defaultVal[key][subKey]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn finalParams;\n\t} else {\n\t\t//in all other cases completely relace the default value of the variable if a value is given\n\t\treturn typeof variable === 'undefined' ? defaultVal : variable;\n\t}\n}\n\n//similar to defaultTo except it changes the properties directly\n// eg:\n// applyDefaults(obj, {property: 'value'});\n// rather than:\n// obj = defaultTo(obj, {property: 'value'});\n//!!WARNING!! obj MUST be a defined object for the function to work\nfunction applyDefaults(obj, defaults) {\n\tif (typeof obj === 'undefined') {\n\t\tconsole.log('WARNING! an applyDefaults object is undefined, these defaults were not applied:\\n', defaults);\n\t\treturn false;\n\t}\n\n\tfor (var property in defaults) {\n\t\tif (defaults.hasOwnProperty(property)) {\n\t\t\tobj[property] = defaultTo(obj[property], defaults[property]);\n\t\t}\n\t}\n\n\treturn obj;\n}\n\nexports.defaultTo = defaultTo;\nexports.applyDefaults = applyDefaults;\n},{\"clone\":4}],6:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = GA_trackEvent;\n//Code for tracking Google Analytics events\nfunction GA_trackEvent(category, action, label) {\n\t//\".replace(/(\\r\\n|\\n|\\r)/gm,\"\")\" removes any line breaks\n\tvar eventCat = category.replace(/(\\r\\n|\\n|\\r)/gm, \"\").trim();\n\tvar eventAct = action.replace(/(\\r\\n|\\n|\\r)/gm, \"\").trim().toLowerCase();\n\tvar eventLabel = label.replace(/(\\r\\n|\\n|\\r)/gm, \"\").trim();\n\n\ttry {\n\t\tga('send', 'event', eventCat, eventAct, eventLabel); //Uncomment when Google Analytics has been incorporated into the site\n\t\t//console.log(\"GA event =\", {category: eventCat, action: eventAct, label: eventLabel});\n\t} catch (err) {}\n}\nmodule.exports = exports['default'];\n\n},{}],8:[function(require,module,exports){\n(function (global){\n\n'use strict';\n\n//This file is generated using gulp.\n//To edit this file, edit the main_js_file.js generator template in the gulp config folder\n\n//import npm plugins\n\nvar _jquery = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _accordion = require('../_1_modules/accordion/accordion');\n\nvar _accordion2 = _interopRequireDefault(_accordion);\n\nvar _share = require('../_1_modules/share/share');\n\nvar _share2 = _interopRequireDefault(_share);\n\nvar _defaultThemeScript = require('../_1_modules/~on-page-load-JS/defaultThemeScript');\n\nvar _defaultThemeScript2 = _interopRequireDefault(_defaultThemeScript);\n\nvar _isFirefox = require('../_1_modules/~on-page-load-JS/isFirefox');\n\nvar _isFirefox2 = _interopRequireDefault(_isFirefox);\n\nvar _isIE = require('../_1_modules/~on-page-load-JS/isIE');\n\nvar _isIE2 = _interopRequireDefault(_isIE);\n\nvar _newWindow = require('../_1_modules/~on-page-load-JS/newWindow');\n\nvar _newWindow2 = _interopRequireDefault(_newWindow);\n\nvar _smoothAnchors = require('../_1_modules/~on-page-load-JS/smoothAnchors');\n\nvar _smoothAnchors2 = _interopRequireDefault(_smoothAnchors);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _jquery2.default)(function () {\n\n  //run manual Imports\n\n\n  //run modules\n\n  (0, _accordion2.default)();\n  (0, _share2.default)();\n  (0, _defaultThemeScript2.default)();\n  (0, _isFirefox2.default)();\n  (0, _isIE2.default)();\n  (0, _newWindow2.default)();\n  (0, _smoothAnchors2.default)();\n\n  (0, _jquery2.default)('html').addClass('js-loaded');\n});\n\n//import the manual imports\n\n\n//import modules\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../_1_modules/accordion/accordion\":9,\"../_1_modules/share/share\":10,\"../_1_modules/~on-page-load-JS/defaultThemeScript\":11,\"../_1_modules/~on-page-load-JS/isFirefox\":12,\"../_1_modules/~on-page-load-JS/isIE\":13,\"../_1_modules/~on-page-load-JS/newWindow\":14,\"../_1_modules/~on-page-load-JS/smoothAnchors\":15}],9:[function(require,module,exports){\n(function (global){\n\n'use strict';\n\n//npm imports\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.default = function () {\n\t_module.each(function (e) {\n\t\tnew accordion(this);\n\t});\n};\n\nvar _jquery = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//module imports\n//import { example } from 'example/example';\n\nvar //hooks\n_module = (0, _jquery2.default)('.JS-accordion'),\n    _revealer = (0, _jquery2.default)('.JS-accordion__revealer'),\n    _toggle = (0, _jquery2.default)('.JS-accordion__toggle');\n\nvar //classes\nopen_ = '-accordion--open';\n\n//module functionality\n\nvar accordion = function () {\n\tfunction accordion(elem) {\n\t\tvar _this = this;\n\n\t\t_classCallCheck(this, accordion);\n\n\t\tvar This = this;\n\t\tthis.elem = elem;\n\t\tthis.$elem = (0, _jquery2.default)(elem);\n\t\tthis.$toggle = this.$elem.find(_toggle);\n\t\tthis.$revealer = this.$elem.find(_revealer);\n\n\t\tthis.$toggle.click(function (e) {\n\t\t\te.preventDefault();\n\t\t\t_this.toggle();\n\t\t});\n\t}\n\n\t//toggles accordion open and closed\n\n\n\t_createClass(accordion, [{\n\t\tkey: 'toggle',\n\t\tvalue: function toggle() {\n\t\t\tthis.$revealer.slideToggle();\n\t\t\tthis.$elem.toggleClass(open_);\n\t\t}\n\t}]);\n\n\treturn accordion;\n}();\n\n//This function is called on page load unless the name of this file starts with an underscore\n\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],10:[function(require,module,exports){\n(function (global){\n\n'use strict';\n\n//npm imports\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n//scripts imports\n\n\nexports.default = function () {\n\t_link.click(function (e) {\n\t\tnew share__window((0, _jquery2.default)(this), e);\n\t});\n};\n\nvar _jquery = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _defaultTo = require('default-to');\n\nvar _defaultTo2 = _interopRequireDefault(_defaultTo);\n\nvar _GA_trackEvent = require('_functions/GA_trackEvent');\n\nvar _GA_trackEvent2 = _interopRequireDefault(_GA_trackEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar //hooks\n_link = (0, _jquery2.default)('.JS-share__link');\n\nvar //other variables\ntitleText = (0, _jquery2.default)('head title').text(),\n    pageTitle = titleText.split(' |')[0];\n\nvar window_settings = {\n\n\ttwitter: {\n\t\twindow_name: 'Share on Twitter',\n\t\theight: 260,\n\t\tga: 'Twitter share'\n\t},\n\n\tfacebook: {\n\t\twindow_name: 'Share on Facebook',\n\t\theight: 400,\n\t\tga: 'Facebook share'\n\t},\n\n\tlinkedin: {\n\t\twindow_name: 'Share on LinkedIn',\n\t\twidth: 520,\n\t\theight: 570,\n\t\tga: 'LinkedIn share'\n\t},\n\n\tmail: {\n\t\topenWindow: false,\n\t\tga: 'Email share'\n\t}\n};\n\n//module functionality\n\nvar share__window = function () {\n\tfunction share__window(_thisLink, e) {\n\t\t_classCallCheck(this, share__window);\n\n\t\tthis.url = _thisLink.attr('href');\n\t\tthis.e = e;\n\n\t\tvar shareType = void 0;\n\n\t\tif (this.url.indexOf('twitter') > -1) {\n\t\t\tshareType = 'twitter';\n\t\t} else if (this.url.indexOf('facebook') > -1) {\n\t\t\tshareType = 'facebook';\n\t\t} else if (this.url.indexOf('linkedin') > -1) {\n\t\t\tshareType = 'linkedin';\n\t\t} else if (this.url.indexOf('mailto') > -1) {\n\t\t\tshareType = 'mail';\n\t\t}\n\n\t\tthis.openWindow(window_settings[shareType]);\n\t}\n\n\t_createClass(share__window, [{\n\t\tkey: 'openWindow',\n\t\tvalue: function openWindow(settings) {\n\n\t\t\tsettings = (0, _defaultTo2.default)(settings, {\n\t\t\t\twindow_name: 'Share',\n\t\t\t\theight: 600,\n\t\t\t\twidth: 600,\n\t\t\t\tga: 'Share link clicked',\n\t\t\t\topenWindow: true\n\t\t\t});\n\n\t\t\t//triggers Google analytics tracking\n\t\t\t(0, _GA_trackEvent2.default)(settings.ga, 'click', pageTitle);\n\n\t\t\tif (settings.openWindow) {\n\n\t\t\t\tthis.e.preventDefault();\n\n\t\t\t\t// Fixes dual-screen position for most browsers except Firefox\n\t\t\t\tvar dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;\n\t\t\t\tvar dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;\n\n\t\t\t\tvar w = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n\t\t\t\tvar h = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n\n\t\t\t\tvar left = w / 2 - settings.width / 2 + dualScreenLeft;\n\t\t\t\tvar top = h / 2 - settings.height / 2 + dualScreenTop;\n\n\t\t\t\t//Opens share links in a new window\n\t\t\t\twindow.open(this.url, settings.window_name, 'scrollbars=yes, width=' + settings.width + ', height=' + settings.height + ', top=' + top + ', left=' + left);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn share__window;\n}();\n\n//This function is called on page load unless the name of this file starts with an underscore\n\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_functions/GA_trackEvent\":7,\"default-to\":5}],11:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n\n  // putting lines by the pre blocks\n  (0, _jquery2.default)(\"pre\").each(function () {\n    var pre = (0, _jquery2.default)(this).text().split(\"\\n\");\n    var lines = new Array(pre.length);\n    for (var i = 0; i < pre.length - 1; i++) {\n      var wrap = Math.floor(pre[i].split(\"\").length / 70);\n      if (pre[i] == \"\" && i == pre.length - 1) {\n        lines.splice(i, 1);\n      } else {\n        lines[i] = i + 1;\n        for (var j = 0; j < wrap - 1; j++) {\n          lines[i] += \"\\n\";\n        }\n      }\n    }\n    (0, _jquery2.default)(this).before(\"<pre class='lines'>\" + lines.join(\"\\n\") + \"</pre>\");\n  });\n};\n\nvar _jquery = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],12:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.isFirefox = undefined;\n\nexports.default = function () {\n\tif (isFirefox) (0, _jquery2.default)('html').addClass('firefox');\n};\n\nvar _jquery = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isFirefox = window.navigator.userAgent.match(/Firefox/i);\n\nexports.isFirefox = isFirefox;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],13:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.isIE = undefined;\n\nexports.default = function () {\n\tif (!Modernizr.flexbox && !Modernizr.flexwrap || isIE) {\n\t\t//$('head').append('<script src=\"/assets/scripts/browser-hacks/flexibility.js\"></script>');\n\t\t//flexibility(document.documentElement);\n\n\t\tif (isIE) {\n\t\t\t(0, _jquery2.default)('html').addClass('ie');\n\t\t}\n\t}\n};\n\nvar _jquery = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isIE = window.navigator.userAgent.match(/MSIE|Trident/);\n\nexports.isIE = isIE;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],14:[function(require,module,exports){\n(function (global){\n/**********************************************************************************\\\r\n\topen PDFs, docs, external site links (start with http://), etc in a new window\r\n\\**********************************************************************************/\n\n//Now includes google analytics integration\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nexports.default = function () {\n\n\tvar file_types = ['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt', 'mp3'];\n\tvar image_types = ['jpg', 'gif', 'png'];\n\n\t(0, _jquery2.default)('a:not([href^=\"javascript\"])').each(function (i) {\n\t\tvar href = (0, _jquery2.default)(this).attr('href');\n\n\t\tif (typeof href !== 'undefined') {\n\t\t\t//for download links and image links\n\t\t\tvar file_type = href.substr(href.lastIndexOf('.') + 1).toLowerCase();\n\n\t\t\t//if file type is in the accepted list of file types...\n\t\t\tif (_jquery2.default.inArray(file_type, file_types) > -1) {\n\t\t\t\t(0, _jquery2.default)(this).addClass('JS-downloadLink').addClass('JS-downloadLink--' + file_type);\n\n\t\t\t\t//if file type is an image and is on a touch device\n\t\t\t} else if (_jquery2.default.inArray(file_type, image_types) > -1 && (0, _jquery2.default)('html').hasClass('touch')) {\n\t\t\t\t(0, _jquery2.default)(this).addClass('JS-imageLink');\n\t\t\t};\n\n\t\t\tif (href.match(/^mailto:[^?]*?@/)) {\n\t\t\t\t(0, _jquery2.default)(this).addClass('JS-emailLink');\n\t\t\t}\n\n\t\t\t//podcast link\n\t\t\tif (href.match(/^http:\\/\\/www.itunes.com/)) {\n\t\t\t\t(0, _jquery2.default)(this).addClass('podcastLink');\n\t\t\t};\n\n\t\t\t//External links\n\t\t\tif (href.match(/^http/) && href.indexOf(window.location.host) === -1 && !(0, _jquery2.default)(this).hasClass('JS-share__link') && !(0, _jquery2.default)(this).hasClass('JS-podcastLink') &&\n\n\t\t\t//add data-jshook=\"newWindow__exclusion\" to an external link to prevent it opening in a new window\n\t\t\t!(0, _jquery2.default)(this).hasClass('JS-newWindow__exclusion')) {\n\t\t\t\t(0, _jquery2.default)(this).addClass('JS-externalLink');\n\t\t\t};\n\t\t};\n\n\t\t//once all links have been processed\n\t\tif (i == (0, _jquery2.default)('a:not([href^=\"javascript\"])').length - 1) {\n\t\t\t//any specific new window links get listed here\n\t\t\tvar all_new_window_links = '.JS-downloadLink, .JS-imageLink, .JS-externalLink, .JS-podcastLink';\n\n\t\t\t//Google analytics download tracking\n\t\t\t(0, _jquery2.default)('body').on('click', '.JS-downloadLink', function () {\n\t\t\t\tvar url = (0, _jquery2.default)(this).attr('href');\n\t\t\t\tvar classStart = 'JS-downloadLink--';\n\t\t\t\tvar self = (0, _jquery2.default)(this);\n\t\t\t\tvar text = self.text();\n\n\t\t\t\t_jquery2.default.each(file_types, function (i) {\n\t\t\t\t\tvar extension = file_types[i];\n\t\t\t\t\tif (self.hasClass(classStart + extension)) {\n\t\t\t\t\t\t(0, _GA_trackEvent2.default)('Download - ' + extension, 'click', text + ' | ' + url);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t//Google analytics external link tracking\n\t\t\t(0, _jquery2.default)('body').on('click', '.JS-externalLink', function () {\n\t\t\t\tvar url = (0, _jquery2.default)(this).attr('href');\n\t\t\t\t(0, _GA_trackEvent2.default)('Outbound', 'click', url);\n\t\t\t});\n\n\t\t\t//Google analytics external link tracking\n\t\t\t(0, _jquery2.default)('body').on('click', '.JS-podcastLink', function () {\n\t\t\t\tvar url = (0, _jquery2.default)(this).attr('href');\n\t\t\t\t(0, _GA_trackEvent2.default)('Podcast', 'click', url);\n\t\t\t});\n\n\t\t\t(0, _jquery2.default)('body').on('click', '.JS-emailLink', function () {\n\t\t\t\tvar url = (0, _jquery2.default)(this).attr('href');\n\t\t\t\t(0, _GA_trackEvent2.default)('email contact', 'click', url);\n\t\t\t});\n\n\t\t\t(0, _jquery2.default)(all_new_window_links).addClass(\"JS-newWindow\");\n\n\t\t\t(0, _jquery2.default)('body').on('click', all_new_window_links, function (e) {\n\t\t\t\t//return false; //uncomment to help with testing so you don't get redirected while testing GA code.\n\t\t\t\te.preventDefault();\n\t\t\t\twindow.open((0, _jquery2.default)(this).attr('href'));\n\t\t\t});\n\t\t}\n\t});\n};\n\nvar _jquery = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _GA_trackEvent = require('_functions/GA_trackEvent');\n\nvar _GA_trackEvent2 = _interopRequireDefault(_GA_trackEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_functions/GA_trackEvent\":7}],15:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nexports.default = function () {\n\t(0, _jquery2.default)('a[href*=\"#\"]:not([href=\"#\"])').click(function () {\n\t\tif (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n\t\t\tvar target = (0, _jquery2.default)(this.hash);\n\t\t\ttarget = target.length ? target : (0, _jquery2.default)('[name=' + this.hash.slice(1) + ']');\n\t\t\tif (target.length) {\n\t\t\t\t(0, _jquery2.default)('html, body').animate({\n\t\t\t\t\tscrollTop: target.offset().top\n\t\t\t\t}, 1000);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t});\n};\n\nvar _jquery = (typeof window !== \"undefined\" ? window['$'] : typeof global !== \"undefined\" ? global['$'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//Performs a smooth page scroll to an anchor on the same page\n//https://css-tricks.com/snippets/jquery/smooth-scrolling/\n\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}]},{},[8])\n\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var clone = (function() {\n'use strict';\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (parent instanceof nativeMap) {\n      child = new nativeMap();\n    } else if (parent instanceof nativeSet) {\n      child = new nativeSet();\n    } else if (parent instanceof nativePromise) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else if (parent instanceof Error) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (parent instanceof nativeMap) {\n      var keyIterator = parent.keys();\n      while(true) {\n        var next = keyIterator.next();\n        if (next.done) {\n          break;\n        }\n        var keyChild = _clone(next.value, depth - 1);\n        var valueChild = _clone(parent.get(next.value), depth - 1);\n        child.set(keyChild, valueChild);\n      }\n    }\n    if (parent instanceof nativeSet) {\n      var iterator = parent.keys();\n      while(true) {\n        var next = iterator.next();\n        if (next.done) {\n          break;\n        }\n        var entryChild = _clone(next.value, depth - 1);\n        child.add(entryChild);\n      }\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.applyDefaults = exports.defaultTo = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = defaultTo;\n\nvar _clone = require('clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isObj(obj) {\n\treturn (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj.constructor !== Array;\n}\n\n//- a function for easily applying default values, especially good for objects\nfunction defaultTo(variable, defaultVal) {\n\n\t//if it's an object, treat each setting in the object seperately\n\tif (isObj(defaultVal)) {\n\t\tvar finalParams = (0, _clone2.default)(defaultVal);\n\n\t\t// We iterate over each property of the paramObject\n\t\tfor (var key in variable) {\n\n\t\t\t// If the current property wasn't inherited, proceed\n\t\t\tif (variable.hasOwnProperty(key)) {\n\t\t\t\t// If the current property is defined, add it to finalParams\n\t\t\t\tif (variable[key] !== 'undefined') {\n\t\t\t\t\tfinalParams[key] = variable[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//if the value is an object, run the defaultTo function on the object\n\t\t\tif (isObj(defaultVal[key])) {\n\t\t\t\tfor (var subKey in defaultVal[key]) {\n\t\t\t\t\tif (defaultVal[key].hasOwnProperty(subKey)) {\n\t\t\t\t\t\tfinalParams[key][subKey] = defaultTo(variable[key][subKey], defaultVal[key][subKey]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn finalParams;\n\t} else {\n\t\t//in all other cases completely relace the default value of the variable if a value is given\n\t\treturn typeof variable === 'undefined' ? defaultVal : variable;\n\t}\n}\n\n//similar to defaultTo except it changes the properties directly\n// eg:\n// applyDefaults(obj, {property: 'value'});\n// rather than:\n// obj = defaultTo(obj, {property: 'value'});\n//!!WARNING!! obj MUST be a defined object for the function to work\nfunction applyDefaults(obj, defaults) {\n\tif (typeof obj === 'undefined') {\n\t\tconsole.log('WARNING! an applyDefaults object is undefined, these defaults were not applied:\\n', defaults);\n\t\treturn false;\n\t}\n\n\tfor (var property in defaults) {\n\t\tif (defaults.hasOwnProperty(property)) {\n\t\t\tobj[property] = defaultTo(obj[property], defaults[property]);\n\t\t}\n\t}\n\n\treturn obj;\n}\n\nexports.defaultTo = defaultTo;\nexports.applyDefaults = applyDefaults;","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","//Code for tracking Google Analytics events\r\nexport default function GA_trackEvent(category,action,label) {\r\n\t//\".replace(/(\\r\\n|\\n|\\r)/gm,\"\")\" removes any line breaks\r\n\tvar eventCat = category.replace(/(\\r\\n|\\n|\\r)/gm,\"\").trim();\r\n\tvar eventAct = action.replace(/(\\r\\n|\\n|\\r)/gm,\"\").trim().toLowerCase();\r\n\tvar eventLabel = label.replace(/(\\r\\n|\\n|\\r)/gm,\"\").trim();\r\n\r\n\ttry {\r\n\t\tga('send', 'event', eventCat, eventAct, eventLabel); //Uncomment when Google Analytics has been incorporated into the site\r\n\t\t//console.log(\"GA event =\", {category: eventCat, action: eventAct, label: eventLabel});\r\n\t} catch(err){}\r\n}\r\n","\n'use strict';\n\n//This file is generated using gulp.\n//To edit this file, edit the main_js_file.js generator template in the gulp config folder\n\n//import npm plugins\n\nimport $ from 'jquery';\n\n//import the manual imports\n\n\n//import modules\n\nimport accordion from '../_1_modules/accordion/accordion';\nimport share from '../_1_modules/share/share';\nimport defaultThemeScript from '../_1_modules/~on-page-load-JS/defaultThemeScript';\nimport isFirefox from '../_1_modules/~on-page-load-JS/isFirefox';\nimport isIE from '../_1_modules/~on-page-load-JS/isIE';\nimport newWindow from '../_1_modules/~on-page-load-JS/newWindow';\nimport smoothAnchors from '../_1_modules/~on-page-load-JS/smoothAnchors';\n\n$(() => {\n\n//run manual Imports\n\n\n//run modules\n\naccordion();\nshare();\ndefaultThemeScript();\nisFirefox();\nisIE();\nnewWindow();\nsmoothAnchors();\n\n$('html').addClass('js-loaded');\n\n});\n\n","\r\n'use strict';\r\n\r\n//npm imports\r\nimport $ from 'jquery';\r\n\r\n//module imports\r\n//import { example } from 'example/example';\r\n\r\nconst //hooks\r\n\t_module =  $('.JS-accordion'),\r\n\t_revealer = $('.JS-accordion__revealer'),\r\n\t_toggle = $('.JS-accordion__toggle');\r\n\r\nconst //classes\r\n\topen_ = '-accordion--open';\r\n\r\n//module functionality\r\nclass accordion {\r\n\tconstructor(elem){\r\n\t\tconst This = this;\r\n\t\tthis.elem = elem;\r\n\t\tthis.$elem = $(elem);\r\n\t\tthis.$toggle = this.$elem.find(_toggle);\r\n\t\tthis.$revealer = this.$elem.find(_revealer);\r\n\r\n\t\tthis.$toggle.click((e)=>{\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.toggle();\r\n\t\t\t})\r\n\t}\r\n\r\n\t//toggles accordion open and closed\r\n\ttoggle(){\r\n\t\tthis.$revealer.slideToggle();\r\n\t\tthis.$elem.toggleClass(open_);\r\n\t}\r\n}\r\n\r\n//This function is called on page load unless the name of this file starts with an underscore\r\nexport default function() {\r\n\t_module.each(function(e){\r\n\t\tnew accordion(this);\r\n\t})\r\n}\r\n","\r\n'use strict';\r\n\r\n//npm imports\r\nimport $ from 'jquery';\r\nimport defaultTo from 'default-to';\r\n\r\n//scripts imports\r\nimport GA_trackEvent from '_functions/GA_trackEvent';\r\n\r\nconst //hooks\r\n\t_link = $('.JS-share__link');\r\n\r\nconst //other variables\r\n\ttitleText = $('head title').text(),\r\n\tpageTitle = titleText.split(' |')[0];\r\n\r\nconst\r\n\twindow_settings = {\r\n\r\n\t\ttwitter : {\r\n\t\t\twindow_name : 'Share on Twitter',\r\n\t\t\theight: 260,\r\n\t\t\tga: 'Twitter share'\r\n\t\t},\r\n\r\n\t\tfacebook : {\r\n\t\t\twindow_name : 'Share on Facebook',\r\n\t\t\theight: 400,\r\n\t\t\tga: 'Facebook share'\r\n\t\t},\r\n\r\n\t\tlinkedin : {\r\n\t\t\twindow_name : 'Share on LinkedIn',\r\n\t\t\twidth : 520,\r\n\t\t\theight: 570,\r\n\t\t\tga: 'LinkedIn share'\r\n\t\t},\r\n\r\n\t\tmail : {\r\n\t\t\topenWindow: false,\r\n\t\t\tga: 'Email share'\r\n\t\t}\r\n\t};\r\n\r\n\r\n//module functionality\r\nclass share__window {\r\n\r\n\tconstructor(_thisLink, e){\r\n\t\tthis.url = _thisLink.attr('href');\r\n\t\tthis.e = e;\r\n\r\n\t\tlet shareType;\r\n\r\n\t\tif(this.url.indexOf('twitter') > -1){\r\n\t\t\tshareType = 'twitter';\r\n\t\t} else if (this.url.indexOf('facebook') > -1){\r\n\t\t\tshareType = 'facebook';\r\n\t\t} else if (this.url.indexOf('linkedin') > -1){\r\n\t\t\tshareType = 'linkedin';\r\n\t\t} else if (this.url.indexOf('mailto') > -1){\r\n\t\t\tshareType = 'mail';\r\n\t\t}\r\n\r\n\t\tthis.openWindow(window_settings[shareType])\r\n\t}\r\n\r\n\topenWindow(settings){\r\n\r\n\t\tsettings = defaultTo(settings, {\r\n\t\t\twindow_name : 'Share',\r\n\t\t\theight : 600,\r\n\t\t\twidth : 600,\r\n\t\t\tga: 'Share link clicked',\r\n\t\t\topenWindow : true,\r\n\t\t});\r\n\r\n\t\t//triggers Google analytics tracking\r\n\t\tGA_trackEvent(settings.ga, 'click', pageTitle);\r\n\r\n\t\tif (settings.openWindow){\r\n\r\n\t\t\tthis.e.preventDefault();\r\n\r\n\t\t\t// Fixes dual-screen position for most browsers except Firefox\r\n\t\t\tvar dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;\r\n\t\t\tvar dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;\r\n\r\n\t\t\tvar w = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\r\n\t\t\tvar h = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\r\n\r\n\t\t\tvar left = ((w / 2) - (settings.width / 2)) + dualScreenLeft;\r\n\t\t\tvar top = ((h / 2) - (settings.height / 2)) + dualScreenTop;\r\n\r\n\t\t\t//Opens share links in a new window\r\n\t\t\twindow.open(this.url, settings.window_name, 'scrollbars=yes, width=' + settings.width + ', height=' + settings.height + ', top=' + top + ', left=' + left);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//This function is called on page load unless the name of this file starts with an underscore\r\nexport default function() {\r\n\t_link.click(function(e){\r\n\t\tnew share__window($(this), e);\r\n\t});\r\n}\r\n","import $ from 'jquery';\r\n\r\nexport default function(){\r\n\r\n  // putting lines by the pre blocks\r\n  $(\"pre\").each(function(){\r\n    var pre = $(this).text().split(\"\\n\");\r\n    var lines = new Array(pre.length);\r\n    for(var i = 0; i < pre.length - 1; i++) {\r\n      var wrap = Math.floor(pre[i].split(\"\").length / 70)\r\n      if (pre[i]==\"\"&&i==pre.length-1) {\r\n        lines.splice(i, 1);\r\n      } else {\r\n        lines[i] = i+1;\r\n        for(var j = 0; j < wrap - 1; j++) {\r\n          lines[i] += \"\\n\";\r\n        }\r\n      }\r\n    }\r\n    $(this).before(\"<pre class='lines'>\" + lines.join(\"\\n\") + \"</pre>\");\r\n  });\r\n\r\n}\r\n","\r\nimport $ from 'jquery';\r\n\r\nvar isFirefox = window.navigator.userAgent.match(/Firefox/i);\r\n\r\nexport default function() {\r\n\tif(isFirefox)\t$('html').addClass('firefox');\r\n}\r\n\r\nexport { isFirefox };\r\n","'use strict';\r\n\r\nimport $ from 'jquery';\r\n\r\nvar isIE = window.navigator.userAgent.match(/MSIE|Trident/);\r\n\r\nexport default function() {\r\n\tif(!Modernizr.flexbox && !Modernizr.flexwrap || isIE){\r\n\t\t//$('head').append('<script src=\"/assets/scripts/browser-hacks/flexibility.js\"></script>');\r\n\t\t//flexibility(document.documentElement);\r\n\r\n\t\tif (isIE) {\r\n\t\t\t$('html').addClass('ie');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport { isIE };\r\n","/**********************************************************************************\\\r\n\topen PDFs, docs, external site links (start with http://), etc in a new window\r\n\\**********************************************************************************/\r\n\r\n//Now includes google analytics integration\r\n\r\n'use strict';\r\n\r\nimport $ from 'jquery';\r\n\r\nimport GA_trackEvent from '_functions/GA_trackEvent';\r\n\r\nexport default function() {\r\n\r\n\tvar file_types = ['pdf','doc','docx','xls','xlsx','ppt','pptx','txt','mp3'];\r\n\tvar image_types = ['jpg','gif','png'];\r\n\r\n\t$('a:not([href^=\"javascript\"])').each(function(i){\r\n\t\tvar href = $(this).attr('href');\r\n\r\n\t\tif (typeof href !== 'undefined'){\r\n\t\t//for download links and image links\r\n\t\t\tvar file_type = href.substr((href.lastIndexOf('.') +1)).toLowerCase();\r\n\r\n\t\t\t//if file type is in the accepted list of file types...\r\n\t\t\tif ($.inArray(file_type,file_types) > -1){\r\n\t\t\t\t$(this).addClass('JS-downloadLink').addClass('JS-downloadLink--'+file_type);\r\n\r\n\t\t\t//if file type is an image and is on a touch device\r\n\t\t\t} else if ($.inArray(file_type,image_types) > -1 && $('html').hasClass('touch')){\r\n\t\t\t\t$(this).addClass('JS-imageLink');\r\n\t\t\t};\r\n\r\n\t\t\tif (href.match(/^mailto:[^?]*?@/)){\r\n\t\t\t\t$(this).addClass('JS-emailLink')\r\n\t\t\t}\r\n\r\n\t\t//podcast link\r\n\t\t\tif (href.match(/^http:\\/\\/www.itunes.com/)){\r\n\t\t\t\t$(this).addClass('podcastLink');\r\n\t\t\t};\r\n\r\n\t\t//External links\r\n\t\t\tif (\r\n\t\t\t\thref.match(/^http/) &&\r\n\t\t\t\thref.indexOf(window.location.host) === -1 &&\r\n\t\t\t\t!$(this).hasClass('JS-share__link') &&\r\n\t\t\t\t!$(this).hasClass('JS-podcastLink') &&\r\n\r\n\t\t\t\t//add data-jshook=\"newWindow__exclusion\" to an external link to prevent it opening in a new window\r\n\t\t\t\t!$(this).hasClass('JS-newWindow__exclusion')\r\n\t\t\t){\r\n\t\t\t\t$(this).addClass('JS-externalLink');\r\n\t\t\t};\r\n\r\n\t\t};\r\n\r\n\t\t//once all links have been processed\r\n\t\tif (i == $('a:not([href^=\"javascript\"])').length - 1){\r\n\t\t\t//any specific new window links get listed here\r\n\t\t\tvar all_new_window_links = '.JS-downloadLink, .JS-imageLink, .JS-externalLink, .JS-podcastLink';\r\n\r\n\t\t\t//Google analytics download tracking\r\n\t\t\t$('body').on('click','.JS-downloadLink', function(){\r\n\t\t\t\tvar url = $(this).attr('href');\r\n\t\t\t\tvar classStart = 'JS-downloadLink--';\r\n\t\t\t\tvar self = $(this);\r\n\t\t\t\tvar text = self.text();\r\n\r\n\t\t\t\t$.each(file_types, function(i){\r\n\t\t\t\t\tvar extension = file_types[i];\r\n\t\t\t\t\tif (self.hasClass(classStart+extension)) {\r\n\t\t\t\t\t\tGA_trackEvent('Download - ' + extension, 'click', text + ' | ' + url);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t//Google analytics external link tracking\r\n\t\t\t$('body').on('click','.JS-externalLink', function(){\r\n\t\t\t\tvar url = $(this).attr('href');\r\n\t\t\t\tGA_trackEvent('Outbound', 'click', url);\r\n\t\t\t});\r\n\r\n\t\t\t//Google analytics external link tracking\r\n\t\t\t$('body').on('click','.JS-podcastLink', function(){\r\n\t\t\t\tvar url = $(this).attr('href');\r\n\t\t\t\tGA_trackEvent('Podcast', 'click', url);\r\n\t\t\t});\r\n\r\n\t\t\t$('body').on('click','.JS-emailLink', function(){\r\n\t\t\t\tvar url = $(this).attr('href');\r\n\t\t\t\tGA_trackEvent('email contact', 'click', url);\r\n\t\t\t});\r\n\r\n\r\n\t\t\t$(all_new_window_links).addClass(\"JS-newWindow\");\r\n\r\n\t\t\t$('body').on('click', all_new_window_links, function(e){\r\n\t\t\t\t//return false; //uncomment to help with testing so you don't get redirected while testing GA code.\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\twindow.open($(this).attr('href'));\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n}\r\n","//Performs a smooth page scroll to an anchor on the same page\r\n//https://css-tricks.com/snippets/jquery/smooth-scrolling/\r\n\r\nimport $ from 'jquery';\r\n\r\nexport default function() {\r\n\t$('a[href*=\"#\"]:not([href=\"#\"])').click(function() {\r\n\t\tif (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') && location.hostname == this.hostname) {\r\n\t\t\tvar target = $(this.hash);\r\n\t\t\ttarget = target.length ? target : $('[name=' + this.hash.slice(1) +']');\r\n\t\t\tif (target.length) {\r\n\t\t\t\t$('html, body').animate({\r\n          scrollTop: target.offset().top\r\n        }, 1000);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n"],"sourceRoot":"/source/"}